import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as r,c as i,b as a,d as e,e as m,a as t}from"./app-51564aae.js";const o={},c=t(`<h1 id="github开源项目提交pr" tabindex="-1"><a class="header-anchor" href="#github开源项目提交pr" aria-hidden="true">#</a> GitHub开源项目提交PR</h1><h3 id="fork代码" tabindex="-1"><a class="header-anchor" href="#fork代码" aria-hidden="true">#</a> Fork代码</h3><p>首先fork一份代码到自己的仓库<br><img src="https://s2.loli.net/2024/04/28/MXjRUmgDvHuKPc5.webp" alt="image.png" loading="lazy"></p><h3 id="更新代码到最新" tabindex="-1"><a class="header-anchor" href="#更新代码到最新" aria-hidden="true">#</a> 更新代码到最新</h3><p>选择Sync fork下的update<br><img src="https://s2.loli.net/2024/04/28/c5sJljVNrtn4DuY.webp" alt="image.png" loading="lazy"></p><h3 id="本地仓库更新" tabindex="-1"><a class="header-anchor" href="#本地仓库更新" aria-hidden="true">#</a> 本地仓库更新</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git pull
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使得本地仓库可以拉取到最新的代码</p><h3 id="添加自己的代码" tabindex="-1"><a class="header-anchor" href="#添加自己的代码" aria-hidden="true">#</a> 添加自己的代码</h3>`,9),p={href:"https://programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE",target:"_blank",rel:"noopener noreferrer"},h=a("p",null,"以代码随想录这道找字符串位置的题目为例：",-1),d=a("p",null,[e("他给出的是KMP算法，这种算法的时间复杂度为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"n"),a("mo",null,"+"),a("mi",null,"m"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(n+m)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"+"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"m"),a("span",{class:"mclose"},")")])])]),a("br"),e(" 我们给出字符串哈希的解法，时间复杂度为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"n"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(n)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mclose"},")")])])]),a("br"),a("img",{src:"https://s2.loli.net/2024/04/28/mdP3uetUSVpb1Wl.webp",alt:"image.png",loading:"lazy"})],-1),g=t('<p>写完了，然后提交GitHub,写好我们更新了那些东西<br><img src="https://s2.loli.net/2024/04/28/ZBjdNExWhvqQG5C.webp" alt="image.png" loading="lazy"></p><p>然后到GitHub中，我们向仓库提交PR申请：<br><img src="https://s2.loli.net/2024/04/28/TG7OzAxIpeFljmd.webp" alt="image.png" loading="lazy"></p><p>创建 Pull Request<br><img src="https://s2.loli.net/2024/04/28/6junkJAgVaQ2Eoy.webp" alt="image.png" loading="lazy"></p><p>只有一个commit，那么title和description一致即可。<br><img src="https://s2.loli.net/2024/04/28/bx6gRGTn3BIHQNF.webp" alt="image.png" loading="lazy"></p><p>此时我们已经提交成功了，等待合并即可<br><img src="https://s2.loli.net/2024/04/28/mO5NIWXZjTnU1bG.webp" alt="image.png" loading="lazy"></p><h2 id="滑动窗口求最大值" tabindex="-1"><a class="header-anchor" href="#滑动窗口求最大值" aria-hidden="true">#</a> 滑动窗口求最大值</h2><p>这是我之前的提交，增加滑动窗口求最大值的单调队列解法<br><img src="https://s2.loli.net/2024/04/28/QF9U5CH2KrcztdL.webp" alt="image.png" loading="lazy"><br><img src="https://s2.loli.net/2024/04/28/BbJ9K583mYDwaeE.webp" alt="image.png" loading="lazy"></p>',7);function u(b,x){const s=n("ExternalLinkIcon");return r(),i("div",null,[c,a("p",null,[a("a",p,[e("https://programmercarl.com/0028.实现strStr.html#算法公开课"),m(s)])]),h,d,g])}const y=l(o,[["render",u],["__file","GitHub开源项目提交PR.html.vue"]]);export{y as default};
