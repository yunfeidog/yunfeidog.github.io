const e=JSON.parse('{"key":"v-16e59850","path":"/algorithm/0-leetcode%E5%88%B7%E9%A2%98/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98-%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97.html","title":"算法刷题-栈与队列","lang":"zh-CN","frontmatter":{"title":"算法刷题-栈与队列","date":"2023-10-26T00:00:00.000Z","category":["Algorithm","栈与队列"],"tag":["Algorithm","栈与队列"],"description":"算法刷题-栈与队列 232. 用栈实现队列 请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（push、pop、peek、empty）： 实现 MyQueue 类：","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/algorithm/0-leetcode%E5%88%B7%E9%A2%98/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98-%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97.html"}],["meta",{"property":"og:site_name","content":"全民制作人ikun"}],["meta",{"property":"og:title","content":"算法刷题-栈与队列"}],["meta",{"property":"og:description","content":"算法刷题-栈与队列 232. 用栈实现队列 请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（push、pop、peek、empty）： 实现 MyQueue 类："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-14T07:40:06.000Z"}],["meta",{"property":"article:author","content":"全民制作人ikun"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:tag","content":"栈与队列"}],["meta",{"property":"article:published_time","content":"2023-10-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-14T07:40:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法刷题-栈与队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-14T07:40:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全民制作人ikun\\",\\"url\\":\\"https://github.com/yunfeidog\\"}]}"]]},"headers":[{"level":2,"title":"232. 用栈实现队列","slug":"_232-用栈实现队列","link":"#_232-用栈实现队列","children":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]}]},{"level":2,"title":"225. 用队列实现栈","slug":"_225-用队列实现栈","link":"#_225-用队列实现栈","children":[{"level":3,"title":"思路","slug":"思路-1","link":"#思路-1","children":[]},{"level":3,"title":"代码","slug":"代码-1","link":"#代码-1","children":[]}]},{"level":2,"title":"20. 有效的括号","slug":"_20-有效的括号","link":"#_20-有效的括号","children":[{"level":3,"title":"思路","slug":"思路-2","link":"#思路-2","children":[]},{"level":3,"title":"代码","slug":"代码-2","link":"#代码-2","children":[]}]},{"level":2,"title":"1047. 删除字符串中的所有相邻重复项","slug":"_1047-删除字符串中的所有相邻重复项","link":"#_1047-删除字符串中的所有相邻重复项","children":[{"level":3,"title":"思路","slug":"思路-3","link":"#思路-3","children":[]},{"level":3,"title":"代码","slug":"代码-3","link":"#代码-3","children":[]}]},{"level":2,"title":"150. 逆波兰表达式求值","slug":"_150-逆波兰表达式求值","link":"#_150-逆波兰表达式求值","children":[{"level":3,"title":"思路","slug":"思路-4","link":"#思路-4","children":[]},{"level":3,"title":"代码","slug":"代码-4","link":"#代码-4","children":[]}]},{"level":2,"title":"239. 滑动窗口最大值","slug":"_239-滑动窗口最大值","link":"#_239-滑动窗口最大值","children":[{"level":3,"title":"思路","slug":"思路-5","link":"#思路-5","children":[]},{"level":3,"title":"代码","slug":"代码-5","link":"#代码-5","children":[]}]},{"level":2,"title":"347. 前 K 个高频元素","slug":"_347-前-k-个高频元素","link":"#_347-前-k-个高频元素","children":[{"level":3,"title":"思路","slug":"思路-6","link":"#思路-6","children":[]},{"level":3,"title":"代码","slug":"代码-6","link":"#代码-6","children":[]}]}],"git":{"createdTime":1698489661000,"updatedTime":1720942806000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":2}]},"readingTime":{"minutes":5.88,"words":1763},"filePathRelative":"algorithm/0-leetcode刷题/算法刷题-栈与队列.md","localizedDate":"2023年10月26日","excerpt":"<h1> 算法刷题-栈与队列</h1>\\n<h2> <a href=\\"https://leetcode.cn/problems/implement-queue-using-stacks/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">232. 用栈实现队列</a></h2>\\n<p>请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（<code>push</code>、<code>pop</code>、<code>peek</code>、<code>empty</code>）：</p>\\n<p>实现 <code>MyQueue</code> 类：</p>","copyright":{"author":"全民制作人cxk","license":"CC-BY-NC-SA-4.0"},"autoDesc":true}');export{e as data};
