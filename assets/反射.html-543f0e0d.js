const e=JSON.parse('{"key":"v-6a20547c","path":"/java/2-Java%E9%AB%98%E7%BA%A7/%E5%8F%8D%E5%B0%84.html","title":"反射","lang":"zh-CN","frontmatter":{"title":"反射","date":"2023-10-25T00:00:00.000Z","category":["Java","反射"],"tag":["Java","反射"],"description":"代理相关 为什么需要代理？ 代理可以无侵入式的对方法进行增强，而不需要修改原始方法的代码，这样就可以在不修改原始方法的情况下，对方法进行增强。 代理长什么样子？ 代理里面就是对象要被代理的方法 Java通过什么方式来保证代理的样子？ 通过接口保证，后面的对象和代理需要实现同一个接口，接口中就是被代理的所有方法 代码演示：","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/java/2-Java%E9%AB%98%E7%BA%A7/%E5%8F%8D%E5%B0%84.html"}],["meta",{"property":"og:site_name","content":"全民制作人ikun"}],["meta",{"property":"og:title","content":"反射"}],["meta",{"property":"og:description","content":"代理相关 为什么需要代理？ 代理可以无侵入式的对方法进行增强，而不需要修改原始方法的代码，这样就可以在不修改原始方法的情况下，对方法进行增强。 代理长什么样子？ 代理里面就是对象要被代理的方法 Java通过什么方式来保证代理的样子？ 通过接口保证，后面的对象和代理需要实现同一个接口，接口中就是被代理的所有方法 代码演示："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T07:21:55.000Z"}],["meta",{"property":"article:author","content":"全民制作人ikun"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"反射"}],["meta",{"property":"article:published_time","content":"2023-10-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T07:21:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反射\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-28T07:21:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全民制作人ikun\\",\\"url\\":\\"https://github.com/yunfeidog\\"}]}"]]},"headers":[{"level":2,"title":"代理相关","slug":"代理相关","link":"#代理相关","children":[]},{"level":2,"title":"反射","slug":"反射","link":"#反射","children":[{"level":3,"title":"获取反射三种方式","slug":"获取反射三种方式","link":"#获取反射三种方式","children":[]},{"level":3,"title":"反射获取构造方法","slug":"反射获取构造方法","link":"#反射获取构造方法","children":[]},{"level":3,"title":"获取成员变量","slug":"获取成员变量","link":"#获取成员变量","children":[]},{"level":3,"title":"获取成员方法","slug":"获取成员方法","link":"#获取成员方法","children":[]},{"level":3,"title":"利用反射保存对象信息","slug":"利用反射保存对象信息","link":"#利用反射保存对象信息","children":[]}]}],"git":{"createdTime":1699015325000,"updatedTime":1714288915000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":3}]},"readingTime":{"minutes":5.05,"words":1515},"filePathRelative":"java/2-Java高级/反射.md","localizedDate":"2023年10月25日","excerpt":"<h2> 代理相关</h2>\\n<p>为什么需要代理？</p>\\n<blockquote>\\n<p>代理可以无侵入式的对方法进行增强，而不需要修改原始方法的代码，这样就可以在不修改原始方法的情况下，对方法进行增强。</p>\\n</blockquote>\\n<p>代理长什么样子？</p>\\n<blockquote>\\n<p>代理里面就是对象要被代理的方法</p>\\n</blockquote>\\n<p>Java通过什么方式来保证代理的样子？</p>\\n<blockquote>\\n<p>通过接口保证，后面的对象和代理需要实现同一个接口，接口中就是被代理的所有方法</p>\\n</blockquote>\\n<p>代码演示：</p>","copyright":{"author":"全民制作人cxk","license":"CC-BY-NC-SA-4.0"},"autoDesc":true}');export{e as data};
