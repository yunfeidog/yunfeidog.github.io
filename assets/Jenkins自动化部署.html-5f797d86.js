import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o,c as l,b as n,d as s,e,a as i}from"./app-51564aae.js";const p={},c=i(`<h1 id="jenkins自动化部署" tabindex="-1"><a class="header-anchor" href="#jenkins自动化部署" aria-hidden="true">#</a> Jenkins自动化部署</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><h3 id="centos安装" tabindex="-1"><a class="header-anchor" href="#centos安装" aria-hidden="true">#</a> centos安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://get.jenkins.io/war-stable/2.452.2/jenkins.war
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>写一个脚本启动：</p><p>需要把jenkins和Java的目录替换为自己的</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 指定jenkins.war目录</span>
<span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span>/root/tools/jenkins

<span class="token comment">#指定运行的jdk版本（此处是为 Jenkins单独使用 的jdk）；本机环境配置的是 1.7</span>
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/root/tools/java/jdk-21.0.3

<span class="token comment"># 运行 war   指定端口  和在当前目录（jenkins.sh的目录）下生成日志文件</span>
<span class="token function">nohup</span> <span class="token variable">$JAVA_HOME</span>/bin/java <span class="token parameter variable">-jar</span> <span class="token variable">$JENKINS_HOME</span>/jenkins.war <span class="token parameter variable">--httpPort</span><span class="token operator">=</span><span class="token number">8085</span>  <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始jenkins密码：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /root/.jenkins/secrets/initialAdminPassword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="docker安装" tabindex="-1"><a class="header-anchor" href="#docker安装" aria-hidden="true">#</a> Docker安装</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span> <span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">jenkins</span><span class="token punctuation">:</span>
    <span class="token key atrule">user</span><span class="token punctuation">:</span> root
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jenkins1
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 8085<span class="token punctuation">:</span><span class="token number">8080</span>
      <span class="token punctuation">-</span> 50000<span class="token punctuation">:</span><span class="token number">50000</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./jenkins_home/<span class="token punctuation">:</span>/var/jenkins_home/
      <span class="token comment"># 将本地的docker挂载到容器里面，给jenkins使用</span>
      <span class="token punctuation">-</span> /var/run/docker.sock<span class="token punctuation">:</span>/var/run/docker.sock
      <span class="token punctuation">-</span> /usr/bin/docker<span class="token punctuation">:</span>/usr/bin/docker
      <span class="token punctuation">-</span> /etc/docker/daemon.json<span class="token punctuation">:</span>/etc/docker/daemon.json
      <span class="token comment"># 将Jenkin中的公钥私钥挂载出来，用于GitHub等</span>
      <span class="token punctuation">-</span> ./.ssh<span class="token punctuation">:</span>/root/.ssh
      <span class="token comment"># 将服务器的maven挂载到容器里面</span>
      <span class="token punctuation">-</span> /root/tools/apache<span class="token punctuation">-</span>maven<span class="token punctuation">-</span>3.6.3<span class="token punctuation">:</span>/root/apache<span class="token punctuation">-</span>maven<span class="token punctuation">-</span>3.6.3
      <span class="token punctuation">-</span> /root/.m2<span class="token punctuation">:</span>/root/.m2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本安装" tabindex="-1"><a class="header-anchor" href="#基本安装" aria-hidden="true">#</a> 基本安装</h3><p>Docker启动之后，输入密码，安装推荐插件</p><p>![image-20240619172919356](/Users/houyunfei/Library/Application Support/typora-user-images/image-20240619172919356.png)</p><p>安装SSH插件：</p><figure><img src="https://s2.loli.net/2024/06/19/chvuJi6sENS45jP.webp" alt="image-20240619174210864" tabindex="0" loading="lazy"><figcaption>image-20240619174210864</figcaption></figure><h3 id="配置jenkins密钥" tabindex="-1"><a class="header-anchor" href="#配置jenkins密钥" aria-hidden="true">#</a> 配置jenkins密钥</h3><p>进入jenkins的终端</p><p>配置密钥主要是为了去拉取GitHub的代码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;root&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://s2.loli.net/2024/06/19/ZurWVQhlOvJ8TE4.webp" alt="image-20240619203144511" tabindex="0" loading="lazy"><figcaption>image-20240619203144511</figcaption></figure><p>结果会得到<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件</p><p>将公钥<code>id_rsa.pub</code>放入GitHub中</p>`,23),d={href:"https://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"},u=i(`<figure><img src="https://s2.loli.net/2024/06/19/BlfhTXJSjkKG6pN.webp" alt="image-20240619205100693" tabindex="0" loading="lazy"><figcaption>image-20240619205100693</figcaption></figure><p>拉取私有代码：</p><figure><img src="https://s2.loli.net/2024/06/19/PDyoMTdAVneXWrL.webp" alt="image-20240619205656597" tabindex="0" loading="lazy"><figcaption>image-20240619205656597</figcaption></figure><h3 id="插件安装" tabindex="-1"><a class="header-anchor" href="#插件安装" aria-hidden="true">#</a> 插件安装</h3><figure><img src="https://s2.loli.net/2024/07/07/uwNb4BAEWsgyerP.webp" alt="image-20240707093932436" tabindex="0" loading="lazy"><figcaption>image-20240707093932436</figcaption></figure><p>更换插件源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后重启：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://ip:port/restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要用到的插件：</p>`,10),h={href:"https://plugins.jenkins.io/maven-plugin",target:"_blank",rel:"noopener noreferrer"},m={href:"https://plugins.jenkins.io/ssh",target:"_blank",rel:"noopener noreferrer"},g={href:"https://plugins.jenkins.io/publish-over-ssh",target:"_blank",rel:"noopener noreferrer"},k=i('<h3 id="添加凭据" tabindex="-1"><a class="header-anchor" href="#添加凭据" aria-hidden="true">#</a> 添加凭据</h3><figure><img src="https://s2.loli.net/2024/06/19/UqhvFc1MyCVEzHK.webp" alt="image-20240619210454662" tabindex="0" loading="lazy"><figcaption>image-20240619210454662</figcaption></figure><p>这里填GitHub的账号密码：</p><figure><img src="https://s2.loli.net/2024/06/19/wYq9HmKrnAWbcM1.webp" alt="image-20240619210624862" tabindex="0" loading="lazy"><figcaption>image-20240619210624862</figcaption></figure><h3 id="配置java" tabindex="-1"><a class="header-anchor" href="#配置java" aria-hidden="true">#</a> 配置Java</h3><figure><img src="https://s2.loli.net/2024/06/19/BqTXxzjw12CJ6AK.webp" alt="image-20240619211845912" tabindex="0" loading="lazy"><figcaption>image-20240619211845912</figcaption></figure><h3 id="配置maven" tabindex="-1"><a class="header-anchor" href="#配置maven" aria-hidden="true">#</a> 配置Maven</h3><figure><img src="https://s2.loli.net/2024/06/19/Krbt4QJMkiNjca3.webp" alt="image-20240619211851177" tabindex="0" loading="lazy"><figcaption>image-20240619211851177</figcaption></figure><h2 id="自动拉取github代码进行构建" tabindex="-1"><a class="header-anchor" href="#自动拉取github代码进行构建" aria-hidden="true">#</a> 自动拉取GitHub代码进行构建</h2><p>新建一个任务，自由风格或者maven项目</p><figure><img src="https://s2.loli.net/2024/07/07/9iIdVqnvt8Z6wLO.webp" alt="image-20240707094657986" tabindex="0" loading="lazy"><figcaption>image-20240707094657986</figcaption></figure>',11);function v(b,f){const a=r("ExternalLinkIcon");return o(),l("div",null,[c,n("p",null,[n("a",d,[s("https://github.com/settings/keys"),e(a)])]),u,n("ul",null,[n("li",null,[n("a",h,[s("Maven Integration"),e(a)])]),n("li",null,[n("a",m,[s("SSHVersion"),e(a)])]),n("li",null,[n("a",g,[s("Publish Over SSH"),e(a)])])]),k])}const x=t(p,[["render",v],["__file","Jenkins自动化部署.html.vue"]]);export{x as default};
