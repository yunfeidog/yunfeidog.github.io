const a=JSON.parse('{"key":"v-075c2d40","path":"/java/1-Java%E5%9F%BA%E7%A1%80/Java%E9%9B%86%E5%90%88-HashMap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html","title":"Java集合-HashMap","lang":"zh-CN","frontmatter":{"title":"Java集合-HashMap","date":"2023-10-28T00:00:00.000Z","category":["Java","HashMap"],"tag":["Java","HashMap"],"description":"Java集合-HashMap Java的HashMap是一种基于哈希表实现的数据结构，用于存储键值对。在HashMap中，每个键都映射到一个值。 HashMap源码分析 成员变量 static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16 /** * The maximum capacity, used if a higher value is implicitly specified * by either of the constructors with arguments. * MUST be a power of two &lt;= 1&lt;&lt;30. */ static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30; /** * The load factor used when none specified in constructor. */ static final float DEFAULT_LOAD_FACTOR = 0.75f;","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/java/1-Java%E5%9F%BA%E7%A1%80/Java%E9%9B%86%E5%90%88-HashMap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"全民制作人ikun"}],["meta",{"property":"og:title","content":"Java集合-HashMap"}],["meta",{"property":"og:description","content":"Java集合-HashMap Java的HashMap是一种基于哈希表实现的数据结构，用于存储键值对。在HashMap中，每个键都映射到一个值。 HashMap源码分析 成员变量 static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4; // aka 16 /** * The maximum capacity, used if a higher value is implicitly specified * by either of the constructors with arguments. * MUST be a power of two &lt;= 1&lt;&lt;30. */ static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30; /** * The load factor used when none specified in constructor. */ static final float DEFAULT_LOAD_FACTOR = 0.75f;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T07:21:55.000Z"}],["meta",{"property":"article:author","content":"全民制作人ikun"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"HashMap"}],["meta",{"property":"article:published_time","content":"2023-10-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T07:21:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java集合-HashMap\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-28T07:21:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全民制作人ikun\\",\\"url\\":\\"https://github.com/yunfeidog\\"}]}"]]},"headers":[{"level":2,"title":"HashMap源码分析","slug":"hashmap源码分析","link":"#hashmap源码分析","children":[{"level":3,"title":"成员变量","slug":"成员变量","link":"#成员变量","children":[]},{"level":3,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"关键方法","slug":"关键方法","link":"#关键方法","children":[]}]},{"level":2,"title":"面试题","slug":"面试题","link":"#面试题","children":[{"level":3,"title":"说一下HashMap的实现原理","slug":"说一下hashmap的实现原理","link":"#说一下hashmap的实现原理","children":[]},{"level":3,"title":"链表和红黑树转换","slug":"链表和红黑树转换","link":"#链表和红黑树转换","children":[]},{"level":3,"title":"讲一讲HashMap的扩容机制","slug":"讲一讲hashmap的扩容机制","link":"#讲一讲hashmap的扩容机制","children":[]},{"level":3,"title":"hashMap的寻址算法","slug":"hashmap的寻址算法","link":"#hashmap的寻址算法","children":[]},{"level":3,"title":"为何HashMap的数组长度一定是2的次幂？","slug":"为何hashmap的数组长度一定是2的次幂","link":"#为何hashmap的数组长度一定是2的次幂","children":[]}]}],"git":{"createdTime":1714288915000,"updatedTime":1714288915000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":1}]},"readingTime":{"minutes":18.49,"words":5547},"filePathRelative":"java/1-Java基础/Java集合-HashMap源码分析.md","localizedDate":"2023年10月28日","excerpt":"<h1> Java集合-HashMap</h1>\\n<p>Java的HashMap是一种基于哈希表实现的数据结构，用于存储键值对。在HashMap中，每个键都映射到一个值。</p>\\n<h2> HashMap源码分析</h2>\\n<h3> 成员变量</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">DEFAULT_INITIAL_CAPACITY</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// aka 16</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * The maximum capacity, used if a higher value is implicitly specified\\n     * by either of the constructors with arguments.\\n     * MUST be a power of two &lt;= 1&lt;&lt;30.\\n     */</span>\\n    <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">int</span> <span class=\\"token constant\\">MAXIMUM_CAPACITY</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * The load factor used when none specified in constructor.\\n     */</span>\\n    <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">float</span> <span class=\\"token constant\\">DEFAULT_LOAD_FACTOR</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0.75f</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"全民制作人cxk","license":"CC-BY-NC-SA-4.0"},"autoDesc":true}');export{a as data};
