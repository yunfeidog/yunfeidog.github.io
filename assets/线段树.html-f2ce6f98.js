const e=JSON.parse('{"key":"v-39269044","path":"/algorithm/3-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91.html","title":"线段树","lang":"zh-CN","frontmatter":{"title":"线段树","date":"2023-06-12T16:00:34.000Z","category":["Algorithm","数据结构"],"tag":["Algorithm","数据结构","线段树"],"description":"线段树 线段树树基于分治思想的二叉树，用来维护区间信息(区间和、区间最大值、区间最小值等等)。可以在O(logn)O(logn)O(logn)的时间内完成区间信息的查询和修改。 线段树中每个叶子结点存储元素本身，非叶子结点存储区间内元素的统计值","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/algorithm/3-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"全民制作人ikun"}],["meta",{"property":"og:title","content":"线段树"}],["meta",{"property":"og:description","content":"线段树 线段树树基于分治思想的二叉树，用来维护区间信息(区间和、区间最大值、区间最小值等等)。可以在O(logn)O(logn)O(logn)的时间内完成区间信息的查询和修改。 线段树中每个叶子结点存储元素本身，非叶子结点存储区间内元素的统计值"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T07:54:15.000Z"}],["meta",{"property":"article:author","content":"全民制作人ikun"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:tag","content":"线段树"}],["meta",{"property":"article:published_time","content":"2023-06-12T16:00:34.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T07:54:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线段树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-12T16:00:34.000Z\\",\\"dateModified\\":\\"2024-04-28T07:54:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全民制作人ikun\\",\\"url\\":\\"https://github.com/yunfeidog\\"}]}"]]},"headers":[{"level":2,"title":"节点数组tr[]","slug":"节点数组tr","link":"#节点数组tr","children":[]},{"level":2,"title":"递归建树","slug":"递归建树","link":"#递归建树","children":[]},{"level":2,"title":"单点修改","slug":"单点修改","link":"#单点修改","children":[]},{"level":2,"title":"区间查询","slug":"区间查询","link":"#区间查询","children":[]},{"level":2,"title":"区间修改","slug":"区间修改","link":"#区间修改","children":[]},{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"样例 #1","slug":"样例-1","link":"#样例-1","children":[{"level":3,"title":"样例输入 #1","slug":"样例输入-1","link":"#样例输入-1","children":[]},{"level":3,"title":"样例输出 #1","slug":"样例输出-1","link":"#样例输出-1","children":[]}]},{"level":2,"title":"提示","slug":"提示","link":"#提示","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"题目描述","slug":"题目描述-1","link":"#题目描述-1","children":[]},{"level":2,"title":"输入格式","slug":"输入格式-1","link":"#输入格式-1","children":[]},{"level":2,"title":"输出格式","slug":"输出格式-1","link":"#输出格式-1","children":[]},{"level":2,"title":"样例 #1","slug":"样例-1-1","link":"#样例-1-1","children":[{"level":3,"title":"样例输入 #1","slug":"样例输入-1-1","link":"#样例输入-1-1","children":[]},{"level":3,"title":"样例输出 #1","slug":"样例输出-1-1","link":"#样例输出-1-1","children":[]}]},{"level":2,"title":"提示","slug":"提示-1","link":"#提示-1","children":[]},{"level":2,"title":"代码","slug":"代码-1","link":"#代码-1","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"代码","slug":"代码-2","link":"#代码-2","children":[]},{"level":2,"title":"思路","slug":"思路-1","link":"#思路-1","children":[]},{"level":2,"title":"代码","slug":"代码-3","link":"#代码-3","children":[]}],"git":{"createdTime":1698489661000,"updatedTime":1714290855000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":2}]},"readingTime":{"minutes":12.18,"words":3655},"filePathRelative":"algorithm/3-数据结构/线段树.md","localizedDate":"2023年6月12日","excerpt":"<h1> 线段树</h1>\\n<blockquote>\\n<p>线段树树基于分治思想的二叉树，用来维护区间信息(区间和、区间最大值、区间最小值等等)。可以在<span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>O</mi><mo stretchy=\\"false\\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(logn)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.01968em;\\">l</span><span class=\\"mord mathnormal\\">o</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03588em;\\">g</span><span class=\\"mord mathnormal\\">n</span><span class=\\"mclose\\">)</span></span></span></span>的时间内完成区间信息的查询和修改。</p>\\n<ul>\\n<li>线段树中每个叶子结点存储元素本身，非叶子结点存储区间内元素的统计值</li>\\n</ul>\\n</blockquote>","copyright":{"author":"全民制作人cxk","license":"CC-BY-NC-SA-4.0"},"autoDesc":true}');export{e as data};
