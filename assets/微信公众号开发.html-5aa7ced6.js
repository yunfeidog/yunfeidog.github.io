import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-51564aae.js";const i={},u=n("h1",{id:"微信公众号开发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#微信公众号开发","aria-hidden":"true"},"#"),s(" 微信公众号开发")],-1),k=n("h2",{id:"基本配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基本配置","aria-hidden":"true"},"#"),s(" 基本配置")],-1),r={href:"https://mp.weixin.qq.com/",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"配置内网穿透",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#配置内网穿透","aria-hidden":"true"},"#"),s(" 配置内网穿透")],-1),m=n("br",null,null,-1),v={href:"https://developers.weixin.qq.com/community/develop/doc/000684b1e282e0084f6ff3fcc5d000?highLine=-106",target:"_blank",rel:"noopener noreferrer"},g=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`ngrok http --domain=moving-enhanced-woodcock.ngrok-free.app 8080
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),b=n("br",null,null,-1),h={href:"https://natapp.cn/",target:"_blank",rel:"noopener noreferrer"},y=n("br",null,null,-1),w=p(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./natapp -authtoken=你的token
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="注册一个测试号" tabindex="-1"><a class="header-anchor" href="#注册一个测试号" aria-hidden="true">#</a> 注册一个测试号</h3>`,2),f={href:"https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html",target:"_blank",rel:"noopener noreferrer"},q=n("br",null,null,-1),_=n("img",{src:"https://s2.loli.net/2024/04/26/scCNKUlHIhjiw54.webp",alt:"image.png",loading:"lazy"},null,-1),x=n("br",null,null,-1),S=n("br",null,null,-1),T=n("img",{src:"https://s2.loli.net/2024/04/26/LIFY2q16vsWXnOm.webp",alt:"image.png",loading:"lazy"},null,-1),A=n("br",null,null,-1),M=n("br",null,null,-1),j=n("img",{src:"https://s2.loli.net/2024/04/26/EeZ9pNJazlyTPYd.webp",alt:"image.png",loading:"lazy"},null,-1),I=p(`<p>这是我提供的后端接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * <span class="token keyword">@author</span> houyunfei  
 */</span><span class="token annotation punctuation">@RestController</span>  
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/wx&quot;</span><span class="token punctuation">)</span>  
<span class="token annotation punctuation">@Slf4j</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WxController</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token string">&quot;Hello, WeChat!&quot;</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/**  
     * 微信接入验证  
     *  
     * <span class="token keyword">@param</span> <span class="token parameter">signature</span> 签名  
     * <span class="token keyword">@param</span> <span class="token parameter">timestamp</span> 时间戳  
     * <span class="token keyword">@param</span> <span class="token parameter">nonce</span>     随机数  
     * <span class="token keyword">@param</span> <span class="token parameter">echostr</span>   随机字符串  
     */</span>  
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/signature&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">signature</span><span class="token punctuation">(</span><span class="token class-name">String</span> signature<span class="token punctuation">,</span> <span class="token class-name">String</span> timestamp<span class="token punctuation">,</span> <span class="token class-name">String</span> nonce<span class="token punctuation">,</span> <span class="token class-name">String</span> echostr<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;signature: {}, timestamp: {}, nonce: {}, echostr: {}&quot;</span><span class="token punctuation">,</span> signature<span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> nonce<span class="token punctuation">,</span> echostr<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token comment">//请讲返回微信服务器的Respose的content-type字段，改成，text/html; charset=utf-8。  </span>
        <span class="token comment">//怎么改？ answer: 在response header中设置content-type为text/html; charset=utf-8  </span>
        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> echostr<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),E={href:"http://yfjpvb.natappfree.cc/wx/signature",target:"_blank",rel:"noopener noreferrer"},N=p(`<p>配置成功：<br><img src="https://s2.loli.net/2024/04/26/D9YjG5RqFXx48h3.webp" alt="image.png" loading="lazy"></p><h3 id="微信消息验证" tabindex="-1"><a class="header-anchor" href="#微信消息验证" aria-hidden="true">#</a> 微信消息验证</h3><p>微信想要的验证方式如下：</p><blockquote><p>开发者通过检验signature对请求进行校验（下面有校验方式）。若确认此次GET请求来自微信服务器，请原样返回echostr参数内容，则接入生效，成为开发者成功，否则接入失败。加密/校验流程如下：<br> 1）将token、timestamp、nonce三个参数进行字典序排序<br> 2）将三个参数字符串拼接成一个字符串进行sha1加密<br> 3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</p></blockquote><p>校验的工具类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WxUtils</span> <span class="token punctuation">{</span>  
  
  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>  
  
  
    <span class="token doc-comment comment">/**  
     * 校验签名  
     *  
     * <span class="token keyword">@param</span> <span class="token parameter">signature</span> 签名  
     * <span class="token keyword">@param</span> <span class="token parameter">timestamp</span> 时间戳  
     * <span class="token keyword">@param</span> <span class="token parameter">nonce</span>     随机数  
     * <span class="token keyword">@return</span> 布尔值  
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">checkSignature</span><span class="token punctuation">(</span><span class="token class-name">String</span> signature<span class="token punctuation">,</span> <span class="token class-name">String</span> timestamp<span class="token punctuation">,</span> <span class="token class-name">String</span> nonce<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">String</span> checktext <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> signature<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token comment">// 对ToKen,timestamp,nonce 按字典排序  </span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paramArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>token<span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> nonce<span class="token punctuation">}</span><span class="token punctuation">;</span>  
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>paramArr<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">// 将排序后的结果拼成一个字符串  </span>
            <span class="token class-name">String</span> content <span class="token operator">=</span> paramArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>paramArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>paramArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
            <span class="token keyword">try</span> <span class="token punctuation">{</span>  
                <span class="token class-name">MessageDigest</span> md <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;SHA-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token comment">// 对接后的字符串进行sha1加密  </span>
                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digest <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                checktext <span class="token operator">=</span> <span class="token function">byteToStr</span><span class="token punctuation">(</span>digest<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span>  
        <span class="token comment">// 将加密后的字符串与signature进行对比  </span>
        <span class="token keyword">return</span> checktext <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> checktext<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>signature<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/**  
     * 将字节数组转化我16进制字符串  
     *  
     * <span class="token keyword">@param</span> <span class="token parameter">byteArrays</span> 字符数组  
     * <span class="token keyword">@return</span> 字符串  
     */</span>  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">byteToStr</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byteArrays<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> byteArrays<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            str <span class="token operator">+=</span> <span class="token function">byteToHexStr</span><span class="token punctuation">(</span>byteArrays<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/**  
     * 将字节转化为十六进制字符串  
     *  
     * <span class="token keyword">@param</span> <span class="token parameter">myByte</span> 字节  
     * <span class="token keyword">@return</span> 字符串  
     */</span>  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">byteToHexStr</span><span class="token punctuation">(</span><span class="token keyword">byte</span> myByte<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">Digit</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tampArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
        tampArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Digit</span><span class="token punctuation">[</span><span class="token punctuation">(</span>myByte <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0X0F</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
        tampArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Digit</span><span class="token punctuation">[</span>myByte <span class="token operator">&amp;</span> <span class="token number">0X0F</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>tampArr<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完善验证逻辑：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * 微信接入验证  
 *  
 * <span class="token keyword">@param</span> <span class="token parameter">signature</span> 签名  
 * <span class="token keyword">@param</span> <span class="token parameter">timestamp</span> 时间戳  
 * <span class="token keyword">@param</span> <span class="token parameter">nonce</span>     随机数  
 * <span class="token keyword">@param</span> <span class="token parameter">echostr</span>   随机字符串  
 */</span>  
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/signature&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">signature</span><span class="token punctuation">(</span><span class="token class-name">String</span> signature<span class="token punctuation">,</span> <span class="token class-name">String</span> timestamp<span class="token punctuation">,</span> <span class="token class-name">String</span> nonce<span class="token punctuation">,</span> <span class="token class-name">String</span> echostr<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;signature: {}, timestamp: {}, nonce: {}, echostr: {}&quot;</span><span class="token punctuation">,</span> signature<span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> nonce<span class="token punctuation">,</span> echostr<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">boolean</span> res <span class="token operator">=</span> <span class="token class-name">WxUtils</span><span class="token punctuation">.</span><span class="token function">checkSignature</span><span class="token punctuation">(</span>signature<span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> nonce<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> res <span class="token operator">?</span> echostr <span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接收普通消息" tabindex="-1"><a class="header-anchor" href="#接收普通消息" aria-hidden="true">#</a> 接收普通消息</h3>`,9),C={href:"https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_standard_messages.html",target:"_blank",rel:"noopener noreferrer"},U=p(`<p>注意：这里发送普通消息他调用的接口是一开始填的，所以我改成了<code>http://tdikru.natappfree.cc/wx/</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收到消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关注测试公众号，随便发送消息：<br><img src="https://s2.loli.net/2024/04/26/zekbyTf6KCPAOS1.webp" alt="image.png" loading="lazy"></p><p>接收消息：<br> dom4j用来转换接收到的消息，xstream用来发送xml类型消息。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>thoughtworks<span class="token punctuation">.</span>xstream<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>xstream<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.4</span><span class="token number">.19</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>  
<span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>dom4j<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>dom4j<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>  
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.1</span><span class="token number">.3</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>  
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据消息进行封装：<br><img src="https://s2.loli.net/2024/04/26/zscQanohpy7kxD1.webp" alt="image.png" loading="lazy"></p><p>封装实体类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>  
<span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;xml&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextMessage</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> toUserName<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> fromUserName<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;CreateTime&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createTime<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;MsgType&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> ssgType<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;Content&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;MsgId&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">Long</span> ssgId<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;MsgDataId&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> ssgDataId<span class="token punctuation">;</span>  
    <span class="token annotation punctuation">@XStreamAlias</span><span class="token punctuation">(</span><span class="token string">&quot;Idx&quot;</span><span class="token punctuation">)</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> idx<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的响应用户发送消息的代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * 接收微信用户发送来的消息  
 *  
 * <span class="token keyword">@param</span> <span class="token parameter">request</span> 请求  
 * <span class="token keyword">@return</span> 返回消息  
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>  
 */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">receiveMessage</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>  
    <span class="token class-name">ServletInputStream</span> inputStream <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">SAXReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">try</span> <span class="token punctuation">{</span>  
        <span class="token class-name">Document</span> document <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Element</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span> elements <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> element <span class="token operator">:</span> elements<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> element<span class="token punctuation">.</span><span class="token function">getStringValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">DocumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收到消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token function">getReplyMessage</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> message<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
  
<span class="token doc-comment comment">/**  
 * 获取回复消息 发送给用户 xml格式  
 *  
 * <span class="token keyword">@param</span> <span class="token parameter">map</span>  
 * <span class="token keyword">@return</span>  
 */</span>  
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getReplyMessage</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token class-name">TextMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setToUserName</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setFromUserName</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setSsgType</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;小黑子，欢迎关注本公众号！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// XStream将对象转换为xml字符串  </span>
    <span class="token class-name">XStream</span> xStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    xStream<span class="token punctuation">.</span><span class="token function">processAnnotations</span><span class="token punctuation">(</span><span class="token class-name">TextMessage</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> xml <span class="token operator">=</span> xStream<span class="token punctuation">.</span><span class="token function">toXML</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> xml<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：<br><img src="https://s2.loli.net/2024/04/26/8dhl6uKQTiFsYqV.webp" alt="image.png" loading="lazy"></p><h3 id="开发案例-获取同义词" tabindex="-1"><a class="header-anchor" href="#开发案例-获取同义词" aria-hidden="true">#</a> 开发案例：获取同义词</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>  
log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收到消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">String</span> content <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;同义词&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> word <span class="token operator">=</span> split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token class-name">WordUtils</span><span class="token punctuation">.</span><span class="token function">getWord</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">TextMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setToUserName</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setFromUserName</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setSsgType</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// XStream将对象转换为xml字符串  </span>
    <span class="token class-name">XStream</span> xStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    xStream<span class="token punctuation">.</span><span class="token function">processAnnotations</span><span class="token punctuation">(</span><span class="token class-name">TextMessage</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> xml <span class="token operator">=</span> xStream<span class="token punctuation">.</span><span class="token function">toXML</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> xml<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>得到结果：<br><img src="https://s2.loli.net/2024/04/26/HNU2i1ak75o6mGQ.webp" alt="image.png" loading="lazy"></p><h3 id="图文消息回复" tabindex="-1"><a class="header-anchor" href="#图文消息回复" aria-hidden="true">#</a> 图文消息回复</h3>`,15),X={href:"https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Passive_user_reply_message.html#%E5%9B%9E%E5%A4%8D%E5%9B%BE%E6%96%87%E6%B6%88%E6%81%AF",target:"_blank",rel:"noopener noreferrer"},D=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getReplyNewsMessage</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token class-name">NewsMessage</span> newsMessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NewsMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    newsMessage<span class="token punctuation">.</span><span class="token function">setToUserName</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    newsMessage<span class="token punctuation">.</span><span class="token function">setFromUserName</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    newsMessage<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    newsMessage<span class="token punctuation">.</span><span class="token function">setMsgType</span><span class="token punctuation">(</span><span class="token string">&quot;news&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    newsMessage<span class="token punctuation">.</span><span class="token function">setArticleCount</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Article</span><span class="token punctuation">&gt;</span></span> articles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">Article</span> article <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Article</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    article<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;跟着ikun学Java，最新教程！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    article<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string">&quot;来自于Ikun学习Java，详细的Java开发教程&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    article<span class="token punctuation">.</span><span class="token function">setPicUrl</span><span class="token punctuation">(</span><span class="token string">&quot;http://yunfei.plus/site_logo.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    articles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    newsMessage<span class="token punctuation">.</span><span class="token function">setArticles</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">XStream</span> xStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    xStream<span class="token punctuation">.</span><span class="token function">processAnnotations</span><span class="token punctuation">(</span><span class="token class-name">NewsMessage</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> xStream<span class="token punctuation">.</span><span class="token function">toXML</span><span class="token punctuation">(</span>newsMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下：<br><img src="https://s2.loli.net/2024/04/26/w7fdpxJFhgtCKe5.webp" alt="image.png" loading="lazy"></p><h2 id="微信功能开发" tabindex="-1"><a class="header-anchor" href="#微信功能开发" aria-hidden="true">#</a> 微信功能开发</h2><h3 id="获取access-token" tabindex="-1"><a class="header-anchor" href="#获取access-token" aria-hidden="true">#</a> 获取Access_token</h3>`,4),P={href:"https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Get_access_token.html",target:"_blank",rel:"noopener noreferrer"},R=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&quot;</span> <span class="token operator">+</span> <span class="token constant">APPID</span> <span class="token operator">+</span> <span class="token string">&quot;&amp;secret=&quot;</span> <span class="token operator">+</span> <span class="token constant">APPSECRET</span><span class="token punctuation">;</span>  
<span class="token comment">// 发送请求  </span>
<span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">return</span> result<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报错：原因是因为接口不在白名单<br><img src="https://s2.loli.net/2024/04/26/BWcglYUsFyQf6uA.webp" alt="image.png" loading="lazy"></p><p>配置IP白名单，把刚刚报错的IP输入进去：<br><img src="https://s2.loli.net/2024/04/26/oGgKZztufq5Q62T.webp" alt="image.png" loading="lazy"></p><p>拿到结果：<br><img src="https://s2.loli.net/2024/04/26/kvGYQeSPTERngZw.webp" alt="image.png" loading="lazy"></p><p>封装结果：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccessToken</span> <span class="token punctuation">{</span>  
    <span class="token keyword">private</span> <span class="token class-name">String</span> access_token<span class="token punctuation">;</span>  
    <span class="token keyword">private</span> <span class="token keyword">long</span> expires_in<span class="token punctuation">;</span>  
  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setExpires_in</span><span class="token punctuation">(</span><span class="token keyword">long</span> expires_in<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">this</span><span class="token punctuation">.</span>expires_in <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> expires_in <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> expires_in<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取Token的代码，和单例模式非常像，并发问题？</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">AccessToken</span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getAccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token class-name">String</span> <span class="token constant">APPID</span> <span class="token operator">=</span> <span class="token string">&quot;xx&quot;</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> <span class="token constant">APPSECRET</span> <span class="token operator">=</span> <span class="token string">&quot;xx&quot;</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&quot;</span> <span class="token operator">+</span> <span class="token constant">APPID</span> <span class="token operator">+</span> <span class="token string">&quot;&amp;secret=&quot;</span> <span class="token operator">+</span> <span class="token constant">APPSECRET</span><span class="token punctuation">;</span>  
    <span class="token comment">// 发送请求  </span>
    <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">//{&quot;access_token&quot;:&quot;xxx&quot;,&quot;expires_in&quot;:7200}  </span>
    <span class="token comment">// 解析  </span>
    <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parseObj</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span> accessToken <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getStr</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">long</span> expiresIn <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span><span class="token string">&quot;expires_in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    token<span class="token punctuation">.</span><span class="token function">setAccessToken</span><span class="token punctuation">(</span>accessToken<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    token<span class="token punctuation">.</span><span class="token function">setExpiresIn</span><span class="token punctuation">(</span>expiresIn<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
  
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> token<span class="token punctuation">.</span><span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token function">getAccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">return</span> token<span class="token punctuation">.</span><span class="token function">getAccessToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义菜单" tabindex="-1"><a class="header-anchor" href="#自定义菜单" aria-hidden="true">#</a> 自定义菜单</h3>`,9),B={href:"https://developers.weixin.qq.com/doc/offiaccount/Custom_Menus/Creating_Custom-Defined_Menu.html",target:"_blank",rel:"noopener noreferrer"},z=n("p",null,"没有认证弄不了",-1);function F(H,L){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,k,n("p",null,[s("官网："),n("a",r,[s("https://mp.weixin.qq.com/"),t(a)])]),d,n("p",null,[s("使用ngrok进行内网穿透。(这个方法不行，不要用了，可能是域名里面有-的影响)"),m,s(" 错误链接："),n("a",v,[s("https://developers.weixin.qq.com/community/develop/doc/000684b1e282e0084f6ff3fcc5d000?highLine=-106"),t(a)])]),g,n("p",null,[s("使用natapp进行内网穿透："),b,s(" Nat官网："),n("a",h,[s("https://natapp.cn/"),t(a)]),y,s(" 注册好账号，在网站里面配置要映射的端口，然后启动")]),w,n("p",null,[s("接入指南："),n("a",f,[s("https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html"),t(a)]),q,_,x,s(" 主要是配置接口信息，这里的URL需要填写刚才内网穿透的地址，并且需要返回微信需要的特定信息，如下："),S,T,A,s(" 开启端口映射："),M,j]),I,n("p",null,[s("此时访问："),n("a",E,[s("http://yfjpvb.natappfree.cc/wx/signature"),t(a)]),s(" 可以访问")]),N,n("p",null,[n("a",C,[s("https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_standard_messages.html"),t(a)])]),U,n("p",null,[n("a",X,[s("点击链接"),t(a)])]),D,n("p",null,[n("a",P,[s("https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Get_access_token.html"),t(a)])]),R,n("p",null,[s("链接："),n("a",B,[s("https://developers.weixin.qq.com/doc/offiaccount/Custom_Menus/Creating_Custom-Defined_Menu.html"),t(a)])]),z])}const W=e(i,[["render",F],["__file","微信公众号开发.html.vue"]]);export{W as default};
