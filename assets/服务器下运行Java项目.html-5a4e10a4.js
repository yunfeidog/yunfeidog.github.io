import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as d,a as i}from"./app-51564aae.js";const t={},n=i(`<p>查看端口占用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">netstat</span> <span class="token parameter variable">-tln</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过以下步骤将 Java Spring Boot 项目部署到 CentOS 服务器上：</p><ol><li><p>在 CentOS 服务器上安装 Docker。你可以使用如下命令安装 Docker：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo yum install docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>将应用打包成 Docker 镜像。在项目的根目录下，新建一个名为 <code>Dockerfile</code> 的文件，然后在该文件中编写 Docker 镜像的构建脚本。例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>FROM openjdk:8-jdk-alpine
VOLUME /tmp
COPY target/myapp.jar app.jar
ENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/app.jar&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>openjdk:8-jdk-alpine</code> 是 Docker 官方提供的基于 Alpine Linux 的 JDK 镜像，</p><ul><li><code>/tmp</code> 是 Docker 镜像中的挂载点，</li><li><code>target/myapp.jar</code> 是指要拷贝到 Docker 镜像中的可运行 JAR 文件路径（请确定此处路径与实际情况一致），</li><li><code>[&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/app.jar&quot;]</code> 是要运行的命令。</li></ul><p>然后在项目根目录下输入以下命令构建 Docker 镜像：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo docker build -t app .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>myapp</code> 是你指定的 Docker 镜像名称，注意末尾有一个“.”表示当前目录下的 <code>Dockerfile</code> 文件。</p></li><li><p>运行 Docker 镜像。使用如下命令运行 Docker 镜像：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo docker run -d --name jizhang -p 80:80 app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>myapp</code> 是你指定的 Docker 镜像名称，<code>8080:8080</code> 表示将 Docker 容器的 8080 端口映射到 CentOS 服务器的 8080 端口（请根据实际情况调整端口号），<code>-d</code> 参数表示后台运行。</p><ul><li>前面的80是docker的，后面的是服务器的</li></ul></li><li><p>测试应用是否正常运行。可以在浏览器中输入以下地址来测试应用是否正常运行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://&lt;centos_server_ip&gt;:8080/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>&lt;centos_server_ip&gt;</code> 是你 CentOS 服务器的 IP 地址。</p></li></ol><p>这样就可以将 Java Spring Boot 应用部署到 CentOS 服务器上了。</p>`,5),o=[n];function l(s,c){return a(),d("div",null,o)}const u=e(t,[["render",l],["__file","服务器下运行Java项目.html.vue"]]);export{u as default};
