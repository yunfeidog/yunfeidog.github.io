import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as p,b as n,d as s,e as t,a as e}from"./app-51564aae.js";const r={},c=n("h1",{id:"neovim使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#neovim使用","aria-hidden":"true"},"#"),s(" neovim使用")],-1),u=n("h2",{id:"安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),d={href:"https://neovim.io/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.mintimate.cn/2023/01/10/guideForLunarvim/",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>centos7安装nvim:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/neovim/neovim/releases/download/v0.9.5/nvim-linux64.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压，然后链接：</p><blockquote><p><code>/root/tools/nvim-linux64/bin/nvim</code>这是我的位置</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /root/tools/nvim-linux64/bin/nvim /bin/nvim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2>`,6),k={href:"https://github.com/nvim-lua/kickstart.nvim",target:"_blank",rel:"noopener noreferrer"},h=e('<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/nvim-lua/kickstart.nvim.git <span class="token string">&quot;<span class="token variable">${XDG_CONFIG_HOME<span class="token operator">:-</span>$HOME<span class="token operator">/</span>.config}</span>&quot;</span>/nvim\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',1),g=n("p",null,"lazy",-1),b={href:"https://github.com/nvim-telescope/telescope.nvim%EF%BC%8C%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%EF%BC%9Aripgrep",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"LSP:",-1),q={href:"https://github.com/williamboman/mason.nvim",target:"_blank",rel:"noopener noreferrer"},f=e(`<p>pyright</p><p>neovim/nvim-lspconfig</p><p>一些使用方法：</p><table><thead><tr><th>用法</th><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>横向切屏</td><td>control+w+v</td><td></td></tr><tr><td>移动到右侧屏幕</td><td>control+w+l</td><td></td></tr><tr><td>移动到左侧屏幕</td><td>control+w+h</td><td></td></tr></tbody></table><h2 id="安装-macos" tabindex="-1"><a class="header-anchor" href="#安装-macos" aria-hidden="true">#</a> 安装(MacOS)</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> neovim
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>在<code>/.config/</code>下创建一个<code>nvim</code>文件夹</p><p>再创建一个<code>init.lua</code>进行配置</p><p>一些简单基本配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">local</span> <span class="token builtin class-name">set</span> <span class="token operator">=</span> vim.o
-- 设置行号
<span class="token assign-left variable">set.number</span><span class="token operator">=</span>true
-- 设置相对行号
<span class="token assign-left variable">set.relativenumber</span><span class="token operator">=</span>true
-- 设置vim剪切板和系统剪切板同步
<span class="token assign-left variable">set.clipboard</span><span class="token operator">=</span><span class="token string">&quot;unnamed&quot;</span>
-- 在 copy 后高亮
vim.api.nvim_create_autocmd<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;TextYankPost&quot;</span> <span class="token punctuation">}</span>, <span class="token punctuation">{</span>
	pattern <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;*&quot;</span> <span class="token punctuation">}</span>,
	callback <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span>
		vim.highlight.on_yank<span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token function">timeout</span> <span class="token operator">=</span> <span class="token number">300</span>,
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	end,
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>绑定一些快捷键：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-- 切换屏幕 ctrl + <span class="token punctuation">(</span>l/h/j/k<span class="token punctuation">)</span> 快捷键设置
<span class="token builtin class-name">local</span> <span class="token assign-left variable">opt</span><span class="token operator">=</span><span class="token punctuation">{</span>noremap<span class="token operator">=</span>true,silent<span class="token operator">=</span>true<span class="token punctuation">}</span>
<span class="token assign-left variable">vim.g.mapleader</span><span class="token operator">=</span><span class="token string">&quot; &quot;</span> -- Leader为空格
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;C-l&gt;&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;l&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+l --<span class="token operator">&gt;</span> 替换为ctrl+l ,移动到右侧的屏幕
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;C-h&gt;&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;h&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+h --<span class="token operator">&gt;</span> 替换为ctrl+h ,移动到右侧的屏幕
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;C-l&gt;&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;l&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+l --<span class="token operator">&gt;</span> 替换为ctrl+l ,移动到左侧的屏幕
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;C-j&gt;&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;j&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+j --<span class="token operator">&gt;</span> 替换为ctrl+j ,移动到下侧的屏幕
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;C-k&gt;&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;k&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+k --<span class="token operator">&gt;</span> 替换为ctrl+k ,移动到上侧的屏幕
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;Leader&gt;v&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;v&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+k --<span class="token operator">&gt;</span> 替换为Leader+v ,新开一个终端编辑器
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>,<span class="token string">&quot;&lt;Leader&gt;s&quot;</span>,<span class="token string">&quot;&lt;C-w&gt;s&quot;</span>,opt<span class="token punctuation">)</span> -- ctrl+w+s --<span class="token operator">&gt;</span> 替换为Leader+s ,向下一个终端编辑器


-- https://www.reddit.com/r/vim/comments/2k4cbr/problem_with_gj_and_gk/
-- 相对行号的跳转
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>, <span class="token string">&quot;j&quot;</span>, <span class="token punctuation">[</span><span class="token punctuation">[</span>v:count ? <span class="token string">&#39;j&#39;</span> <span class="token builtin class-name">:</span> <span class="token string">&#39;gj&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>, <span class="token punctuation">{</span> noremap <span class="token operator">=</span> true, <span class="token function">expr</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>, <span class="token string">&quot;k&quot;</span>, <span class="token punctuation">[</span><span class="token punctuation">[</span>v:count ? <span class="token string">&#39;k&#39;</span> <span class="token builtin class-name">:</span> <span class="token string">&#39;gk&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>, <span class="token punctuation">{</span> noremap <span class="token operator">=</span> true, <span class="token function">expr</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LazyVim:</p>`,14),y={href:"https://github.com/LazyVim/LazyVim",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/folke/lazy.nvim",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/RRethy/base16-nvim",target:"_blank",rel:"noopener noreferrer"},C=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-- lazy.nvim
<span class="token builtin class-name">local</span> lazypath <span class="token operator">=</span> vim.fn.stdpath<span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">..</span> <span class="token string">&quot;/lazy/lazy.nvim&quot;</span>
<span class="token keyword">if</span> not vim.loop.fs_stat<span class="token punctuation">(</span>lazypath<span class="token punctuation">)</span> <span class="token keyword">then</span>
  vim.fn.system<span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string">&quot;git&quot;</span>,
    <span class="token string">&quot;clone&quot;</span>,
    <span class="token string">&quot;--filter=blob:none&quot;</span>,
    <span class="token string">&quot;https://github.com/folke/lazy.nvim.git&quot;</span>,
    <span class="token string">&quot;--branch=stable&quot;</span>, -- latest stable release
    lazypath,
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
end
vim.opt.rtp:prepend<span class="token punctuation">(</span>lazypath<span class="token punctuation">)</span>
require<span class="token punctuation">(</span><span class="token string">&quot;lazy&quot;</span><span class="token punctuation">)</span>.setup<span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token punctuation">{</span>
		<span class="token string">&quot;RRethy/nvim-base16&quot;</span>,
		lazy <span class="token operator">=</span> true,
	<span class="token punctuation">}</span>,
<span class="token punctuation">}</span><span class="token punctuation">)</span>

-- 更换主题 ashes snazzy  blueforest
vim.cmd.colorscheme<span class="token punctuation">(</span><span class="token string">&quot;base16-blueforest&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件：</p><ul><li>ripgrep</li><li>telescope</li><li>lazy load</li></ul><p>LSP code completion:</p><ul><li>Mason</li><li>lspconfig</li><li>mason-lspconfig</li><li>nvim-cmp</li></ul>`,5),z={href:"https://github.com/BurntSushi/ripgrep",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/nvim-telescope/telescope.nvim",target:"_blank",rel:"noopener noreferrer"},E=e(`<p>用于文件搜索</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>, <span class="token string">&quot;&lt;Leader&gt;[&quot;</span>, <span class="token string">&quot;&lt;C-o&gt;&quot;</span>, opt<span class="token punctuation">)</span> -- Ctrl+o --<span class="token operator">&gt;</span> 替换为Leader+<span class="token punctuation">[</span> ,返回上一页面
vim.keymap.set<span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span>, <span class="token string">&quot;&lt;Leader&gt;]&quot;</span>, <span class="token string">&quot;&lt;C-i&gt;&quot;</span>, opt<span class="token punctuation">)</span> -- Ctrl+i --<span class="token operator">&gt;</span> 替换为Leader+<span class="token punctuation">]</span> ,返回下一页面


<span class="token punctuation">{</span>
		 <span class="token assign-left variable">cmd</span><span class="token operator">=</span><span class="token string">&quot;Telescope&quot;</span>, -- 懒加载
		 <span class="token assign-left variable">keys</span><span class="token operator">=</span> <span class="token punctuation">{</span>
 			<span class="token punctuation">{</span> <span class="token string">&quot;&lt;leader&gt;p&quot;</span>, <span class="token string">&quot;:Telescope find_files&lt;CR&gt;&quot;</span>, desc <span class="token operator">=</span> <span class="token string">&quot;find files&quot;</span> <span class="token punctuation">}</span>, -- 搜索文件
			<span class="token punctuation">{</span> <span class="token string">&quot;&lt;leader&gt;P&quot;</span>, <span class="token string">&quot;:Telescope live_grep&lt;CR&gt;&quot;</span>, desc <span class="token operator">=</span> <span class="token string">&quot;grep file&quot;</span> <span class="token punctuation">}</span>, --搜索文本
			<span class="token punctuation">{</span> <span class="token string">&quot;&lt;leader&gt;rs&quot;</span>, <span class="token string">&quot;:Telescope resume&lt;CR&gt;&quot;</span>, desc <span class="token operator">=</span> <span class="token string">&quot;resume&quot;</span> <span class="token punctuation">}</span>,
			<span class="token punctuation">{</span> <span class="token string">&quot;&lt;leader&gt;q&quot;</span>, <span class="token string">&quot;:Telescope oldfiles&lt;CR&gt;&quot;</span>, desc <span class="token operator">=</span> <span class="token string">&quot;oldfiles&quot;</span> <span class="token punctuation">}</span>, --旧文件
		 <span class="token punctuation">}</span>,
    		<span class="token string">&#39;nvim-telescope/telescope.nvim&#39;</span>, tag <span class="token operator">=</span> <span class="token string">&#39;0.1.8&#39;</span>,
      		 dependencies <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;nvim-lua/plenary.nvim&#39;</span> <span class="token punctuation">}</span>
    	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),j={href:"https://github.com/williamboman/mason.nvim",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/microsoft/pyright",target:"_blank",rel:"noopener noreferrer"},T=n("blockquote",null,[n("p",null,"用Mason装pyright")],-1),M=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`MasonInstall pyright
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),V={href:"https://github.com/neovim/nvim-lspconfig",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/williamboman/mason-lspconfig.nvim",target:"_blank",rel:"noopener noreferrer"},B=n("blockquote",null,[n("p",null,"用Mason装Lua-language-server"),n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`MasonInstall Lua-language-server
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])])],-1),N={href:"https://github.com/jose-elias-alvarez/null-ls.nvim",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/hrsh7th/nvim-cmp",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/tpope/vim-fugitive",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/lewis6991/gitsigns.nvim",target:"_blank",rel:"noopener noreferrer"},O=n("p",null,"vim-rhubarb",-1),P=n("p",null,"neovim与Tmux的联动：",-1),X={href:"https://github.com/numToStr/Navigator.nvim",target:"_blank",rel:"noopener noreferrer"},G=n("p",null,[s("向右打开一个终端："),n("code",null,"ctrl+5")],-1),H=n("p",null,[s("退出："),n("code",null,"control+d")],-1),$=n("p",null,[s("移动："),n("code",null,"ctrl+l"),s("移动到右侧termial")],-1),D={href:"https://github.com/preservim/nerdtree",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://mokacoding.com/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/Xuyuanp/nerdtree-git-plugin",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/ryanoasis/vim-devicons",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/folke/persistence.nvim",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/nvim-treesitter/nvim-treesitter",target:"_blank",rel:"noopener noreferrer"};function W(Z,nn){const a=i("ExternalLinkIcon");return l(),p("div",null,[c,u,n("p",null,[s("官网："),n("a",d,[s("https://neovim.io/"),t(a)])]),n("p",null,[s("教程："),n("a",m,[s("https://www.mintimate.cn/2023/01/10/guideForLunarvim/"),t(a)])]),v,n("blockquote",null,[n("p",null,[s("开箱即用："),n("a",k,[s("https://github.com/nvim-lua/kickstart.nvim"),t(a)])]),h]),g,n("p",null,[s("nvim-telescope:"),n("a",b,[s("https://github.com/nvim-telescope/telescope.nvim，需要安装：ripgrep"),t(a)])]),_,n("p",null,[s("mason:"),n("a",q,[s("https://github.com/williamboman/mason.nvim"),t(a)])]),f,n("p",null,[n("a",y,[s("https://github.com/LazyVim/LazyVim"),t(a)])]),n("p",null,[n("a",w,[s("https://github.com/folke/lazy.nvim"),t(a)])]),n("p",null,[n("a",x,[s("https://github.com/RRethy/base16-nvim"),t(a)])]),C,n("p",null,[s("ripgrep:"),n("a",z,[s("https://github.com/BurntSushi/ripgrep"),t(a)])]),n("p",null,[s("telescopre:"),n("a",L,[s("https://github.com/nvim-telescope/telescope.nvim"),t(a)])]),E,n("p",null,[s("Mason:"),n("a",j,[s("https://github.com/williamboman/mason.nvim"),t(a)])]),n("p",null,[s("pyright:"),n("a",R,[s("https://github.com/microsoft/pyright"),t(a)])]),T,M,n("p",null,[s("nvim-lspconfig:"),n("a",V,[s("https://github.com/neovim/nvim-lspconfig"),t(a)])]),n("p",null,[s("mason-lspconfig:"),n("a",S,[s("https://github.com/williamboman/mason-lspconfig.nvim"),t(a)])]),B,n("p",null,[s("null-ls-format:"),n("a",N,[s("https://github.com/jose-elias-alvarez/null-ls.nvim"),t(a)])]),n("p",null,[s("nvim-cmp:"),n("a",F,[s("https://github.com/hrsh7th/nvim-cmp"),t(a)])]),n("p",null,[s("vim-fugitive:"),n("a",I,[s("https://github.com/tpope/vim-fugitive"),t(a)])]),n("p",null,[s("gitsigns.vim:"),n("a",A,[s("https://github.com/lewis6991/gitsigns.nvim"),t(a)])]),O,P,n("p",null,[n("a",X,[s("https://github.com/numToStr/Navigator.nvim"),t(a)])]),G,H,$,n("p",null,[s("nerd tree: "),n("a",D,[s("https://github.com/preservim/nerdtree"),t(a)])]),n("p",null,[n("a",Y,[s("https://mokacoding.com/"),t(a)])]),n("p",null,[n("a",J,[s("https://github.com/Xuyuanp/nerdtree-git-plugin"),t(a)])]),n("p",null,[n("a",K,[s("https://github.com/ryanoasis/vim-devicons"),t(a)])]),n("p",null,[n("a",Q,[s("https://github.com/folke/persistence.nvim"),t(a)])]),n("p",null,[n("a",U,[s("https://github.com/nvim-treesitter/nvim-treesitter"),t(a)])])])}const tn=o(r,[["render",W],["__file","neovim使用.html.vue"]]);export{tn as default};
