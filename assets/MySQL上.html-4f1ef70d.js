import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,a as e}from"./app-51564aae.js";const t={},p=e(`<h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h1><p>关系型数据库：建立在关系模型基础上，由多张相互连接的二维表组成的数据库。</p><h2 id="mysql基础" tabindex="-1"><a class="header-anchor" href="#mysql基础" aria-hidden="true">#</a> MYSQL基础</h2><h3 id="ddl" tabindex="-1"><a class="header-anchor" href="#ddl" aria-hidden="true">#</a> DDL</h3><p>Data Definition Language，数据定义语言，用来定义数据库对象(数据库，表，字段) 。<br> 相关操作如下：</p><h4 id="数据库相关" tabindex="-1"><a class="header-anchor" href="#数据库相关" aria-hidden="true">#</a> 数据库相关</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询所有数据库</span>
<span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>

<span class="token comment">#选择数据库</span>
<span class="token keyword">use</span> template<span class="token punctuation">;</span>

<span class="token comment">#  查询当前数据库</span>
<span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 创建数据库</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> cxk<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> cxk2 <span class="token keyword">default</span> <span class="token keyword">charset</span> utf8mb4<span class="token punctuation">;</span>


<span class="token comment"># 删除数据库</span>
<span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> cxk2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="表相关" tabindex="-1"><a class="header-anchor" href="#表相关" aria-hidden="true">#</a> 表相关</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询当前数据库所有表</span>
<span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>

<span class="token comment"># 查看表结构</span>
<span class="token keyword">desc</span> <span class="token keyword">user</span><span class="token punctuation">;</span>

<span class="token comment"># 查看建表语句</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">user</span><span class="token punctuation">;</span>

<span class="token comment"># 创建表结构</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user
<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
    age <span class="token keyword">int</span> <span class="token keyword">comment</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;性别&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;用户表&#39;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h5><h6 id="数值类型" tabindex="-1"><a class="header-anchor" href="#数值类型" aria-hidden="true">#</a> 数值类型</h6><table><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 Bytes</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 Bytes</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 Bytes</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 Bytes</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 Bytes</td><td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 Bytes</td><td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度 <br>浮点数值</td></tr><tr><td>DOUBLE</td><td>8 Bytes</td><td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 <br>浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h6 id="字符串类型" tabindex="-1"><a class="header-anchor" href="#字符串类型" aria-hidden="true">#</a> 字符串类型</h6><table><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><h6 id="日期和时间类型" tabindex="-1"><a class="header-anchor" href="#日期和时间类型" aria-hidden="true">#</a> 日期和时间类型</h6><table><thead><tr><th>类型</th><th>大小 <br>( bytes)</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01/9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>&#39;-838:59:59&#39;/&#39;838:59:59&#39;</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901/2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>&#39;1000-01-01 00:00:00&#39; 到 &#39;9999-12-31 23:59:59&#39;</td><td>YYYY-MM-DD hh:mm:ss</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>&#39;1970-01-01 00:00:01&#39; UTC 到 &#39;2038-01-19 03:14:07&#39; UTC<br><br>结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td>YYYY-MM-DD hh:mm:ss</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><ul><li><code>CHAR</code>（字符）：<code>CHAR</code> 类型用于存储定长字符串。这意味着无论实际字符串长度是多少，<code>CHAR</code> 列始终占据固定数量的字符位置。如果存储的字符串不足指定长度，MySQL 会使用空格进行填充。这会导致 <code>CHAR</code> 类型占用的存储空间通常较大，但检索数据速度较快。</li><li><code>VARCHAR</code>（可变字符）：<code>VARCHAR</code> 类型用于存储可变长度字符串。它只占据实际数据的存储空间，不会浪费额外的空间用于填充。因此，<code>VARCHAR</code> 类型在存储时通常更有效，但在检索数据时可能略慢一些。</li></ul><h5 id="表操作案例" tabindex="-1"><a class="header-anchor" href="#表操作案例" aria-hidden="true">#</a> 表操作案例</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 表操作案例</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> emp
<span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
    workno <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;员工编号&#39;</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>
    gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;性别&#39;</span><span class="token punctuation">,</span>
    age <span class="token keyword">tinyint</span> <span class="token keyword">comment</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
    idcard <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;身份证&#39;</span><span class="token punctuation">,</span>
    entrydate <span class="token keyword">date</span> <span class="token keyword">comment</span> <span class="token string">&#39;入职时间&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;员工表&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="字段修改" tabindex="-1"><a class="header-anchor" href="#字段修改" aria-hidden="true">#</a> 字段修改</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 添加字段</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp
    <span class="token keyword">add</span> nickname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;昵称&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 修改数据类型</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp
    <span class="token keyword">modify</span> nickname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 修改字段和字段类型</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp
    change nickname username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;昵称&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 删除字段</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp
    <span class="token keyword">drop</span> username<span class="token punctuation">;</span>

<span class="token comment"># 修改表名</span>
 <span class="token keyword">alter</span> <span class="token keyword">table</span> emp <span class="token keyword">rename</span> <span class="token keyword">to</span> employee<span class="token punctuation">;</span>

<span class="token comment"># 删除表</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> tb_user<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dml" tabindex="-1"><a class="header-anchor" href="#dml" aria-hidden="true">#</a> DML</h3><p>DML英文全称是Data Manipulation Language(数据操作语言)，用来对数据库中表的数据记录进<br> 行增、删、改操作。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 添加数据</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_user<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;蔡徐坤&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 给全部字段添加数据</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_user
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;蔡徐坤&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 批量添加数据</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_user <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> gender<span class="token punctuation">)</span>
<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;蔡徐坤&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;蔡徐坤&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment"># 查询数据</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb_user<span class="token punctuation">;</span>

<span class="token comment"># 修改数据</span>
<span class="token keyword">update</span> tb_user <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">&#39;蔡徐坤爸爸&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

<span class="token keyword">update</span> tb_user <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">&#39;蔡徐坤奶奶&#39;</span><span class="token punctuation">,</span>   age<span class="token operator">=</span><span class="token number">100</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token keyword">update</span> tb_user <span class="token keyword">set</span> gender<span class="token operator">=</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">;</span>


<span class="token comment"># 删除数据</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> tb_user <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment"># 删除所有</span>
<span class="token keyword">delete</span> <span class="token keyword">from</span> tb_user<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dql" tabindex="-1"><a class="header-anchor" href="#dql" aria-hidden="true">#</a> DQL</h3><p>DQL英文全称是Data Query Language(数据查询语言)，数据查询语言，用来查询数据库中表的记<br> 录。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	字段列表
<span class="token keyword">FROM</span>
	表名列表
<span class="token keyword">WHERE</span>
	条件列表
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	分组字段列表
<span class="token keyword">HAVING</span>
	分组后条件列表
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	排序字段列表
<span class="token keyword">LIMIT</span>
	分页参数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="基础查询" tabindex="-1"><a class="header-anchor" href="#基础查询" aria-hidden="true">#</a> 基础查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询多个字段</span>
<span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>

<span class="token comment"># 字段设置别名</span>
<span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">as</span> 姓名 <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> id <span class="token keyword">as</span> 序号<span class="token punctuation">,</span>name <span class="token keyword">as</span> 姓名 <span class="token keyword">from</span> emp<span class="token punctuation">;</span>

<span class="token comment"># 去重</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> workaddress <span class="token keyword">as</span>  <span class="token string">&#39;工作地址&#39;</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token comment"># 条件查询 =</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">where</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>
<span class="token comment"># 查询年龄&lt;20</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>
<span class="token comment"># 查询没有身份证的人</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> idcard <span class="token operator">is</span> <span class="token boolean">null</span>  <span class="token punctuation">;</span>
<span class="token comment"># 查询有身份证的人</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> idcard <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
<span class="token comment"># 查询年龄不等于88的人</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">!=</span><span class="token number">88</span><span class="token punctuation">;</span>
<span class="token comment"># 查询年龄在15到20的人</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">&gt;=</span><span class="token number">15</span> <span class="token operator">and</span> age<span class="token operator">&lt;=</span><span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">&gt;=</span><span class="token number">15</span> <span class="token operator">&amp;&amp;</span> age<span class="token operator">&lt;=</span><span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age <span class="token operator">between</span> <span class="token number">15</span> <span class="token operator">and</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token comment"># 查询性别为女，年龄&lt;25的员工</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">&lt;</span><span class="token number">25</span> <span class="token operator">and</span> gender<span class="token operator">=</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 查询年龄为18 ，20 ，40岁的人</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">=</span><span class="token number">18</span> <span class="token operator">or</span> age<span class="token operator">=</span><span class="token number">20</span> <span class="token operator">or</span> age<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span>
<span class="token comment"># 查询姓名为两个字的员工</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;__&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 查询身份证最后一个是x的人</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">where</span> idcard <span class="token operator">like</span> <span class="token string">&#39;%X&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">where</span> idcard <span class="token operator">like</span> <span class="token string">&#39;_________________X&#39;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数" aria-hidden="true">#</a> 聚合函数</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 统计总的记录数</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token comment"># 统计的是idcard字段不为null的记录数</span>
<span class="token keyword">select</span>  <span class="token function">count</span><span class="token punctuation">(</span>idcard<span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token keyword">select</span>  <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token comment"># 统计平均年龄</span>
<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token comment"># 统计最大年龄</span>
<span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>
<span class="token comment"># 统计最小年龄</span>
<span class="token keyword">select</span>  <span class="token function">min</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span>  emp<span class="token punctuation">;</span>
<span class="token comment"># 统计西安地区员工的年龄之和</span>
<span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> workaddress<span class="token operator">=</span><span class="token string">&#39;西安&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询" aria-hidden="true">#</a> 分组查询</h4><p>格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span> <span class="token keyword">WHERE</span> 条件 <span class="token punctuation">]</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组字段名 <span class="token punctuation">[</span> <span class="token keyword">HAVING</span> 分组
后过滤条件 <span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>where 和 having的区别：</p><ul><li>where 是在分组之前进行过滤，不能进行聚合函数判断</li><li>having是在分组之后进行过滤，可以进行聚合函数判断<br> 执行顺序：where &gt; 聚合函数 &gt; having 。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 分组查询男女数量</span>
<span class="token keyword">select</span> gender<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span>  gender<span class="token punctuation">;</span>
<span class="token comment"># 分组统计男女平均年龄</span>
<span class="token keyword">select</span>  gender<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> gender<span class="token punctuation">;</span>
<span class="token comment"># 查询年龄小于45的员工 , 并根据工作地址分组 , 获取员工数量大于等于3的工作地址</span>
<span class="token keyword">select</span> workaddress<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> cnt <span class="token keyword">from</span> emp
<span class="token keyword">where</span> age<span class="token operator">&lt;</span><span class="token number">45</span> <span class="token keyword">group</span> <span class="token keyword">by</span> workaddress <span class="token keyword">having</span>  cnt<span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment"># 统计各个工作地址上班的男性及女性员工的数量</span>
<span class="token keyword">select</span>  workaddress<span class="token punctuation">,</span>gender<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>  <span class="token string">&#39;数量&#39;</span> <span class="token keyword">from</span> emp
<span class="token keyword">group</span> <span class="token keyword">by</span> gender<span class="token punctuation">,</span> workaddress<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="排序查询" tabindex="-1"><a class="header-anchor" href="#排序查询" aria-hidden="true">#</a> 排序查询</h4><p>格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 字段<span class="token number">1</span> 排序方式<span class="token number">1</span> <span class="token punctuation">,</span> 字段<span class="token number">2</span> 排序方式<span class="token number">2</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ASC：升序<br> DESC：降序</p><blockquote><p>如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 根据年龄升序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">order</span> <span class="token keyword">by</span>  age <span class="token keyword">asc</span> <span class="token punctuation">;</span>
<span class="token comment"># 根据入职时间，降序排序</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">order</span> <span class="token keyword">by</span> entrydate <span class="token keyword">desc</span> <span class="token punctuation">;</span>
<span class="token comment"># 根据年龄升序，入职时间降序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">asc</span><span class="token punctuation">,</span>entrydate <span class="token keyword">desc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分页查询" tabindex="-1"><a class="header-anchor" href="#分页查询" aria-hidden="true">#</a> 分页查询</h4><p>格式：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">LIMIT</span> 起始索引<span class="token punctuation">,</span> 查询记录数 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>起始索引从0开始，起始索引 = （查询页码 - 1）* 每页显示记录数。</p><blockquote><p>如果查询的是第一页数据，起始索引可以省略，直接简写为 limit 10。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询第一页，每页10条</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment">#查询第二页，每页10条 公式：(页码-1)*每页条数</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询年龄为20,21,22,23岁的女员工信息。</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  emp <span class="token keyword">where</span> gender<span class="token operator">=</span><span class="token string">&#39;女&#39;</span> <span class="token operator">and</span> age <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 查询性别为 男 ，并且年龄在 20-40 岁(含)以内的姓名为三个字的员工。</span>
<span class="token keyword">select</span>  <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> gender<span class="token operator">=</span><span class="token string">&#39;男&#39;</span> <span class="token operator">and</span> <span class="token punctuation">(</span>age <span class="token operator">between</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">and</span> name <span class="token operator">like</span> <span class="token string">&#39;___&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 统计员工表中, 年龄小于60岁的 , 男性员工和女性员工的人数。</span>
<span class="token keyword">select</span>  gender<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">&lt;</span><span class="token number">60</span> <span class="token keyword">group</span> <span class="token keyword">by</span> gender<span class="token punctuation">;</span>
<span class="token comment"># 查询所有年龄小于等于35岁员工的姓名和年龄，并对查询结果按年龄升序排序，如果年龄相同按入职时间降序排序。</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>age <span class="token keyword">from</span> emp <span class="token keyword">where</span> age<span class="token operator">&lt;=</span><span class="token number">35</span> <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">asc</span><span class="token punctuation">,</span>entrydate <span class="token keyword">desc</span><span class="token punctuation">;</span>
<span class="token comment"># 查询性别为男，且年龄在20-40 岁(含)以内的前5个员工信息，对查询的结果按年龄升序排序，年龄相同按入职时间升序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> gender<span class="token operator">=</span><span class="token string">&#39;男&#39;</span> <span class="token operator">and</span> age <span class="token operator">between</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">40</span> <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">asc</span><span class="token punctuation">,</span>entrydate <span class="token keyword">asc</span> <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行顺序<br><img src="https://s2.loli.net/2023/10/30/HfmqpzD6WkcsRBi.webp" alt="image.png" loading="lazy"></p><h3 id="dcl" tabindex="-1"><a class="header-anchor" href="#dcl" aria-hidden="true">#</a> DCL</h3><p>DCL英文全称是Data Control Language(数据控制语言)，用来管理数据库用户、控制数据库的访 问权限。</p><h4 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询用户</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  mysql<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">;</span>
<span class="token comment"># 创建用户</span>
<span class="token keyword">create</span> <span class="token keyword">user</span> <span class="token string">&#39;test&#39;</span><span class="token variable">@&#39;localhost&#39;</span> identified <span class="token keyword">by</span> <span class="token string">&#39;12345678&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 修改用户密码</span>
<span class="token keyword">alter</span> <span class="token keyword">user</span> <span class="token string">&#39;test&#39;</span><span class="token variable">@&#39;localhost&#39;</span>  identified <span class="token keyword">with</span>  mysql_native_password <span class="token keyword">by</span> <span class="token string">&#39;123456789&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 删除用户</span>
<span class="token keyword">drop</span> <span class="token keyword">user</span> <span class="token string">&#39;test&#39;</span><span class="token variable">@&#39;localhost&#39;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="权限控制" tabindex="-1"><a class="header-anchor" href="#权限控制" aria-hidden="true">#</a> 权限控制</h4><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>all,all privileges</td><td>所有权限</td></tr><tr><td>select</td><td>查询</td></tr><tr><td>insert</td><td>插入</td></tr><tr><td>update</td><td>修改</td></tr><tr><td>delete</td><td>删除</td></tr><tr><td>alter</td><td>修改表</td></tr><tr><td>drop</td><td>删除数据库/表</td></tr><tr><td>create</td><td>创建数据库 /表</td></tr></tbody></table><p>查询权限</p><ul><li>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39; ;<br> 授权</li><li>GRANT 权限列表 ON 数据库名.表名 TO &#39;用户名&#39;@&#39;主机名&#39;;<br> 撤销权限</li><li>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询test用户的权限</span>
<span class="token keyword">show</span> grants  <span class="token keyword">for</span> <span class="token string">&#39;test&#39;</span><span class="token variable">@&#39;localhost&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 授权</span>
<span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">on</span> template<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> <span class="token string">&#39;test&#39;</span><span class="token variable">@&#39;localhost&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 撤销权限</span>
<span class="token keyword">revoke</span> <span class="token keyword">all</span> <span class="token keyword">on</span> template<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;test&#39;</span><span class="token variable">@&#39;localhost&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h3><h4 id="常用函数" tabindex="-1"><a class="header-anchor" href="#常用函数" aria-hidden="true">#</a> 常用函数</h4><ul><li>concat(s1,s2) ,字符串拼接</li><li>lower(str),全部转为小写</li><li>upper(str),转为大写</li><li>lpad(str,n,pad) ,用字符串pad对str进行作填充，直到长度为n</li><li>rpad(str,n,pad)</li><li>trim(str) ,去掉首尾空格</li><li>substring(str,start,len),返回 str从start开始对len个长度的字符串</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 字符串拼接</span>
<span class="token keyword">select</span>  concat<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 转小写</span>
<span class="token keyword">select</span> lower<span class="token punctuation">(</span><span class="token string">&#39;HELLO&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 转大写</span>
<span class="token keyword">select</span> upper<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 左填充</span>
<span class="token keyword">select</span> lpad<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 右填充</span>
<span class="token keyword">select</span> rpad<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 去空格</span>
<span class="token keyword">select</span> trim<span class="token punctuation">(</span><span class="token string">&#39; hello &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 截取</span>
<span class="token keyword">select</span> substr<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 将emp的所有id变为6为 ，不满的前面补0</span>
<span class="token keyword">update</span> emp <span class="token keyword">set</span> workno <span class="token operator">=</span> lpad<span class="token punctuation">(</span>workno<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数值函数" tabindex="-1"><a class="header-anchor" href="#数值函数" aria-hidden="true">#</a> 数值函数</h4><ul><li>ceil 上取整</li><li>floor 下取整</li><li>mod(x,y) 返回x/y的模</li><li>rand(),返回0-1度随机数</li><li>round(x,y) 求x四舍五入结果</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># ceil 上取整</span>
<span class="token keyword">select</span> ceil<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># floor 下取整</span>
<span class="token keyword">select</span> floor<span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># mod(x,y) 返回x/y的模</span>
<span class="token keyword">select</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># rand(),返回0-1度随机数</span>
<span class="token keyword">select</span> rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># round(x,y) 求x四舍五入结果</span>
<span class="token keyword">select</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 生成6为随机验证码</span>
<span class="token keyword">select</span> lpad<span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日期函数" tabindex="-1"><a class="header-anchor" href="#日期函数" aria-hidden="true">#</a> 日期函数</h4><ul><li>curdate 当前日期</li><li>curtime 当前时间</li><li>now 当前日期和时间</li><li>year(date) 指定的年份</li><li>month(date) 月份</li><li>day(date) 日期</li><li>date_add(date,interval,exprtype) 返回一个日期间隔 expr后的时间</li><li>datediff(date1,date2) 间隔天数</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># curdate 当前日期</span>
<span class="token keyword">select</span> curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  curtime 当前时间</span>
<span class="token keyword">select</span> curtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  now 当前日期和时间</span>
<span class="token keyword">select</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  year(date) 指定的年份</span>
<span class="token keyword">select</span> <span class="token keyword">year</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  month(date) 月份</span>
<span class="token keyword">select</span> <span class="token keyword">month</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  day(date) 日期</span>
<span class="token keyword">select</span> <span class="token keyword">day</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  date_add(date,interval,exprtype) 返回一个日期间隔 expr后的时间</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">day</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#  datediff(date1,date2) 间隔天数</span>
<span class="token keyword">select</span> datediff<span class="token punctuation">(</span><span class="token string">&#39;2019-01-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2019-03-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询所有员工的入职天数，并根据入职天数倒序排序。</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span> datediff<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entrydate<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&#39;入职天数&#39;</span>
<span class="token keyword">from</span> emp
<span class="token keyword">order</span> <span class="token keyword">by</span> entrydate <span class="token keyword">desc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="流程函数" tabindex="-1"><a class="header-anchor" href="#流程函数" aria-hidden="true">#</a> 流程函数</h4><ul><li>if(value,t,f) 如果value为true，返回t，否则f</li><li>ifnull(value1,value2) 如果value1不为空，则返回value1，否则value2</li><li><code>case when [val1] then [res1] ... else [default] end</code>如果val1位true，返回res1，否则返回默认</li><li><code>case [expr] when [val1] then [res1] ... else [default] end</code>如果expr为val1，返回res1，否则返回默认</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># if</span>
<span class="token keyword">select</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&#39;ok&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># ifnull</span>
<span class="token keyword">select</span> ifnull<span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> ifnull<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> ifnull<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># case when then else and</span>
<span class="token comment"># 查询emp表的员工姓名和工作地址 (北京/上海 ----&gt; 一线城市 , 其他 ----&gt; 二线城市)</span>
<span class="token keyword">select</span> name<span class="token punctuation">,</span>
       <span class="token punctuation">(</span><span class="token keyword">case</span> workaddress
            <span class="token keyword">when</span> <span class="token string">&#39;北京&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;一线城市&#39;</span>
            <span class="token keyword">when</span> <span class="token string">&#39;上海&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;一线城市&#39;</span>
            <span class="token keyword">else</span>
                <span class="token string">&#39;二线城市 &#39;</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&#39;工作城市&#39;</span>
<span class="token keyword">from</span> emp<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,76),o=[p];function l(c,i){return n(),a("div",null,o)}const k=s(t,[["render",l],["__file","MySQL上.html.vue"]]);export{k as default};
