import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as d,a}from"./app-51564aae.js";const r={},n=a(`<h1 id="vim的基本使用" tabindex="-1"><a class="header-anchor" href="#vim的基本使用" aria-hidden="true">#</a> Vim的基本使用</h1><p>常用命令：<br> 查找字符串，例如搜索user：<code>/user</code>，此时关键字被高亮，按n可以找下一个匹配，N为上一个</p><table><thead><tr><th>用法</th><th>键位</th></tr></thead><tbody><tr><td>移到单词开头</td><td>b</td></tr><tr><td>移到单词结尾</td><td>e</td></tr><tr><td>撤回</td><td>u</td></tr><tr><td>取消撤回</td><td>control+r</td></tr><tr><td>删除一行</td><td>dd</td></tr><tr><td>向后删一个单词</td><td>de</td></tr><tr><td>不退出vim执行shell</td><td><code>:shell</code>,然后exit返回vim</td></tr><tr><td>搜索,例如user</td><td><code>/user</code>，然后n往下找,N往上</td></tr><tr><td>取消搜索高亮</td><td><code>:noh</code></td></tr><tr><td>移动到行尾</td><td><code>^</code>也就是<code>shift+6 </code></td></tr><tr><td>移动到行首</td><td><code>$</code>,也就是<code>shift+4</code></td></tr><tr><td>删除到结尾</td><td><code>d$</code></td></tr><tr><td>替换一个字母</td><td>r</td></tr><tr><td>跳到某一行</td><td>:n（n是具体的行数）</td></tr></tbody></table><h2 id="vim使用技巧" tabindex="-1"><a class="header-anchor" href="#vim使用技巧" aria-hidden="true">#</a> vim使用技巧</h2><h3 id="删除匹配内容的行" tabindex="-1"><a class="header-anchor" href="#删除匹配内容的行" aria-hidden="true">#</a> 删除匹配内容的行：</h3><div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code><span class="token punctuation">:</span>g<span class="token operator">/</span>@ApiOperation<span class="token operator">/</span><span class="token keyword">d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>这里，<code>g</code> 代表全局命令，<code>/@ApiOperation/</code> 是搜索模式，匹配包含 <code>@ApiOperation</code> 的行，<code>d</code> 是删除命令。</p><p>这个命令会删除所有包含 <code>@ApiOperation</code> 注解的行。如果你想预览将要删除的行，可以先使用以下命令：</p><div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code><span class="token punctuation">:</span>g<span class="token operator">/</span>@ApiOperation<span class="token operator">/</span><span class="token keyword">p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h3 id="替换匹配文本" tabindex="-1"><a class="header-anchor" href="#替换匹配文本" aria-hidden="true">#</a> 替换匹配文本</h3><ol><li><p><strong>替换第一个匹配项</strong>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:s/old/new
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将替换当前行的第一个 &quot;old&quot; 为 &quot;new&quot;。</p></li><li><p><strong>替换当前行的所有匹配项</strong>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:s/old/new/g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>g</code> 修饰符代表全局替换（global），将当前行中的所有 &quot;old&quot; 替换为 &quot;new&quot;。</p></li><li><p><strong>替换所有行的所有匹配项</strong>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:%s/old/new/g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol>`,9),o=[n];function s(i,c){return t(),d("div",null,o)}const u=e(r,[["render",s],["__file","Vim使用.html.vue"]]);export{u as default};
