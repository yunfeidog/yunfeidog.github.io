import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c as l,b as r,d as e,e as t,a as i}from"./app-51564aae.js";const d={},h=i('<h1 id="个人简历" tabindex="-1"><a class="header-anchor" href="#个人简历" aria-hidden="true">#</a> 个人简历</h1><h2 id="联系方式" tabindex="-1"><a class="header-anchor" href="#联系方式" aria-hidden="true">#</a> 联系方式</h2><ul><li><p>Email：1844025705@qq.com、手机/微信：17851302691</p></li><li><p>求职方向：Java后端、全栈、我的世界服务器开发</p></li></ul><h2 id="教育经历" tabindex="-1"><a class="header-anchor" href="#教育经历" aria-hidden="true">#</a> 教育经历</h2><ul><li>荣誉成绩：绩点3.9/5(前5%)、一等奖学金、三好学生、CET6</li></ul><h2 id="比赛经历" tabindex="-1"><a class="header-anchor" href="#比赛经历" aria-hidden="true">#</a> 比赛经历</h2><ul><li>2023年8月：睿抗机器人开发者大赛国赛二等奖</li><li>2023年8月：第十九届百度之星程序设计大赛省赛铜奖</li><li>2023年7月：睿抗机器人开发者大赛省赛二等奖</li><li>2023年6月：第十四届蓝桥杯大赛国赛三等奖</li><li>2023年5月：2023年江苏省大学生程序设计竞赛铜牌</li><li>2023年4月：团体程序设计天梯赛团队国赛三等奖</li><li>2023年4月：团体程序设计天梯赛团队省赛二等奖</li><li>2023年4月：第十四届蓝桥杯大赛省赛一等奖</li></ul><h2 id="技能清单" tabindex="-1"><a class="header-anchor" href="#技能清单" aria-hidden="true">#</a> 技能清单</h2><ul><li><strong>Java基础</strong>：熟练掌握Java面向对象、集合、反射等基础知识、阅读过HashMap等集合源码、熟悉底层实现原理。</li><li>**计算机网络：**熟悉七层网络结构、TCP三次握手四次挥手过程、TCP和UDP等。</li><li><strong>并发编程</strong>：了解JUC并发编程，线程池使用、悲乐观锁、CAS、自旋锁、volatile、ThreadLocal等。</li><li><strong>MySQL</strong>：熟悉MySQL的B+树索引原理、MVCC原理、锁机制、事务隔离级别、并发事务控制等、了解SQL慢查询优化。</li><li><strong>Redis</strong>：掌握Redis底层的数据结构原理、持久化、分布式锁等机制、掌握缓存穿透、击穿、雪崩的处理。</li><li><strong>框架</strong>：熟练使用Spring、SpringMVC、SpringBoot、MybatisPlus、Dubbo等主流开发框架。</li><li><strong>设计模式</strong>：熟悉常用设计模式，并在项目中使用过单例、工厂、代理、装饰者、责任链等设计模式。</li><li><strong>前端</strong>：了解HTML、JS、CSS，有Typescript、React、Vue3的实际开发经验。</li></ul><h2 id="实习经历" tabindex="-1"><a class="header-anchor" href="#实习经历" aria-hidden="true">#</a> 实习经历</h2><p>苏州东方智旅信息科技有限公司(2024.01-至今)</p><p>参与的项目:智驾游后台管理、乐游宝后台管理、微信小程序：风景在线</p><p>所用技术栈：SpringBoot+Mybatis+Redis+Consul+OpenFeign+Jenkins等</p><p>负责：实习期间负责<strong>7个后端项目、5个前端项目</strong>的优化与维护，在此期间参与从0到1需求分析、方案设计、功能开发、需求上线完整流程，具备独立承接需求的闭环能力。</p><p>项目描述：该项目主要提供旅游服务，景点讲解，AI路线导航、游览车租赁等功能。本人主要完成工作如下：</p><ul><li><strong>性能调优</strong>：使用<strong>线程池</strong>优化景点文字转语音接口，将任务分批进行处理，同时定位优化S<strong>QL慢查询问题(2-3s)</strong>，性能至少<strong>提高十倍</strong>。</li><li><strong>语音识别优化</strong>：使用<strong>相似度算法优化</strong>语音识别结果。根据词林、拼音、概念、字面权重占比<strong>推荐</strong>最相似的景点，并且有兜底选择。</li><li><strong>助力模块设计</strong>：完成助力得会员功能数据库设计、后端实现、使用<strong>Redis分布式锁</strong>解决多个用户助力产生的并发问题。</li><li><strong>前端页面实现</strong>：使用Vue完成风景在线APP会员相关页面实现、使用<strong>openlayers引擎</strong>完成游客走过城市地图点亮页面实现。</li><li>**代码重构：**重构微信公众号模块(老项目ssh已无法保证正常启动)，采用最新主流技术方案，优化代码结构，<strong>便于后续人员维护</strong>。</li></ul><h2 id="项目经历" tabindex="-1"><a class="header-anchor" href="#项目经历" aria-hidden="true">#</a> 项目经历</h2><h3 id="高性能rpc框架设计" tabindex="-1"><a class="header-anchor" href="#高性能rpc框架设计" aria-hidden="true">#</a> 高性能RPC框架设计</h3>',18),g={href:"http://rpc.yunfei.plus",target:"_blank",rel:"noopener noreferrer"},c=i('<p>参考 Dubbo 开源项目自主设计的基于Java+Etcd+Vert.x+自定义协议的高性能 RPC 框架。开发者只需引入Spring Boot Starter，通过注解和配置文件快速使用框架，像调用本地方法一样轻松调用远程服务；支持SPI机制动态扩展组件。</p><ul><li><strong>核心架构</strong>：包括<strong>消费方调用、序列化器、网络服务器、请求处理器、注册中心、负载均衡器、重试策略、容错策略</strong>等模块。</li><li><strong>多种序列化器实现</strong>：实现了基于JSON、Kryo和Hessian的序列化器，并通过<strong>ThreadLocal</strong>解决了Kyo序列化器的<strong>线程安全</strong>问题。</li><li><strong>负载均衡器</strong>：为提高服务提供者集群处理能力，实现了<strong>一致性Hash</strong>、<strong>平滑加权轮询</strong>等不同算法的负载均衡器，支持<strong>SPI机制</strong>扩展。</li><li><strong>自定义协议</strong>：由于HTTP协议头信息较多，基于Vet.x TCP服务器+设计<strong>紧凑型消息结构</strong>实现了RPC协议，提升网络传输性能。</li><li><strong>注册中心设计</strong>：利用定时任务和 Etcd Key 的 TTL 实现服务提供者的<strong>心跳检测</strong>和<strong>续期机制</strong>，节点下线一定时间后自动移除。</li><li><strong>半包粘包问题</strong>：使用Vert.x的RecordParser解决半包粘包问题，并使用<strong>装饰者模式</strong>封装TcpBufferHandlerWrapper类，增强原有请求处理器，提高代码的可维护性。</li></ul><h3 id="api开放平台" tabindex="-1"><a class="header-anchor" href="#api开放平台" aria-hidden="true">#</a> API开放平台</h3><p>基于 React + Spring Boot + Dubbo + Gateway 的 API 接口开放调用平台。</p><p>管理员可以接入并发布接口，可视化各接口调用情况；用户可以开通接口调用权限、浏览接口及在线调试，并通过客户端 SDK 轻松调用接口。</p><ul><li>根据业务流程，将整个项目后端划分为 web 系统、模拟接口、公共模块、客户端 SDK、API 网关这 5 个子项目，并使用 Maven 进行多模块依赖管理和打包</li><li>使用 Ant Design Pro 脚手架 + 自建 Spring Boot 项目模板快速构建初始 web 项目，并实现了前后端统一权限管理、多环境切换等基础能力。</li><li>前端：后端使用 Swagger + Knife4j 自动生成 OpenAPI 规范的接口文档，前端在此基础上使用插件自动生成接口请求代码，降低前后端协作成本。</li><li>为防止接口被恶意调用，设计 API 签名认证算法，为用户分配唯一 ak / sk 以鉴权，保障调用的安全性、可溯源性（指便于统计接口调用次数）。</li><li>为解决开发者调用成本过高的问题（须自己使用 HTTP + 封装签名去调用接口，平均 20 行左右代码），基于 Spring Boot Starter 开发了客户端 SDK，一行代码 即可调用接口，提高开发体验。</li><li>选用 Spring Cloud Gateway 作为 API 网关，实现了路由转发、访问控制、流量染色，并集中处理签名校验、请求参数校验、接口调用统计等业务逻辑，提高安全性的同时、便于系统开发维护。</li><li>为解决多个子系统内代码大量重复的问题，抽象模型层和业务层代码为公共模块，并使用 Dubbo RPC 框架实现子系统间的高性能接口调用，大幅减少重复代码。</li></ul><h3 id="伙伴匹配系统" tabindex="-1"><a class="header-anchor" href="#伙伴匹配系统" aria-hidden="true">#</a> 伙伴匹配系统</h3><p>基于 Vue 3 + Spring Boot 2 的移动端⽹站，实现了⽤户管理、按标签检索⽤户、推荐相似⽤户、组队等功能。</p><ul><li>⽤户登录：使⽤ Redis 实现分布式 Session，解决<strong>集群间登录态同步</strong>问题；并使⽤ Hash 代替 String 来存储⽤户信息，节约了内存并便于单字段的修改。</li><li>为解决⾸次访问系统的⽤户主⻚加载过慢的问题，使⽤ <strong>Spring Scheduler 定时任务</strong>来实现缓 存预热，并通过<strong>分布式锁</strong>保证多机部署时定时任务不会重复执⾏。</li><li>使⽤编<strong>辑距离算法</strong>实现了根据标签匹配最相似⽤户的功能，并通过<strong>优先队列优化</strong> TOP N 运算过程中的内存占⽤。</li><li>使⽤ <strong>Redis 缓存</strong>⾸⻚⾼频访问的⽤户信息列表，将接⼝响应时⻓从<strong>216ms缩短⾄43ms</strong>。且通 过⾃定义 Redis 序列化器来解决数据乱码、空间浪费的问题。</li><li>使⽤ Easy Excel 读取收集来的基础⽤户信息，并通过⾃定义线程池 + CompletableFuture 并发编程提⾼批量导⼊数据库的性能。</li><li>使⽤ Knife4j + Swagger ⾃动⽣成后端接⼝⽂档，并通过编写 ApiOperation 等注解补充接⼝注释，避免了⼈⼯编写维护⽂档的麻烦</li></ul><hr><h2 id="插件开发经历" tabindex="-1"><a class="header-anchor" href="#插件开发经历" aria-hidden="true">#</a> 插件开发经历</h2>',11),p={id:"油猴插件-codeforces与洛谷跳转",tabindex:"-1"},u=r("a",{class:"header-anchor",href:"#油猴插件-codeforces与洛谷跳转","aria-hidden":"true"},"#",-1),f={href:"https://greasyfork.org/zh-CN/scripts/465489-codeforces%E4%B8%8E%E6%B4%9B%E8%B0%B7%E9%A2%98%E7%9B%AE%E9%93%BE%E6%8E%A5%E8%B7%B3%E8%BD%AC",target:"_blank",rel:"noopener noreferrer"},S=i('<p>插件功能：做题时，可以方便的在Codeforces与洛谷题目间跳转 ，洛谷提供翻译。</p><h3 id="我的世界-gameinfo插件" tabindex="-1"><a class="header-anchor" href="#我的世界-gameinfo插件" aria-hidden="true">#</a> 我的世界：gameinfo插件</h3><p>在游戏的左上角显示当前角色的坐标、时间、下届坐标、FPS、生物群系等信息，支持单项的开启与关闭</p><h3 id="idea插件" tabindex="-1"><a class="header-anchor" href="#idea插件" aria-hidden="true">#</a> IDEA插件</h3><p>CHATGPT插件，可以在IDEA中直接与GPT对话</p><h2 id="致谢" tabindex="-1"><a class="header-anchor" href="#致谢" aria-hidden="true">#</a> 致谢</h2><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>',7);function b(_,x){const n=o("ExternalLinkIcon");return s(),l("div",null,[h,r("p",null,[e("链接："),r("a",g,[e("http://rpc.yunfei.plus"),t(n)])]),c,r("h3",p,[u,e(" 油猴插件："),r("a",f,[e("codeforces与洛谷跳转"),t(n)])]),S])}const B=a(d,[["render",b],["__file","index.html.vue"]]);export{B as default};
