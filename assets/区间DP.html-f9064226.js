const s=JSON.parse('{"key":"v-64d94452","path":"/algorithm/2-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP.html","title":"区间DP","lang":"zh-CN","frontmatter":{"title":"区间DP","date":"2023-05-20T22:40:25.000Z","category":["Algorithm","动态规划"],"tag":["Algorithm","动态规划"],"description":"石子合并（弱化版） 题目描述 https://www.luogu.com.cn/problem/P1775 设有 N(N≤300)N(N \\\\le 300)N(N≤300) 堆石子排成一排，其编号为 1,2,3,⋯ ,N1,2,3,\\\\cdots,N1,2,3,⋯,N。每堆石子有一定的质量 mi(mi≤1000)m_i(m_i \\\\le 1000)mi​(mi​≤1000)。现在要将这 NNN 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/algorithm/2-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP.html"}],["meta",{"property":"og:site_name","content":"全民制作人ikun"}],["meta",{"property":"og:title","content":"区间DP"}],["meta",{"property":"og:description","content":"石子合并（弱化版） 题目描述 https://www.luogu.com.cn/problem/P1775 设有 N(N≤300)N(N \\\\le 300)N(N≤300) 堆石子排成一排，其编号为 1,2,3,⋯ ,N1,2,3,\\\\cdots,N1,2,3,⋯,N。每堆石子有一定的质量 mi(mi≤1000)m_i(m_i \\\\le 1000)mi​(mi​≤1000)。现在要将这 NNN 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T07:54:15.000Z"}],["meta",{"property":"article:author","content":"全民制作人ikun"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:published_time","content":"2023-05-20T22:40:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-28T07:54:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"区间DP\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-20T22:40:25.000Z\\",\\"dateModified\\":\\"2024-04-28T07:54:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全民制作人ikun\\",\\"url\\":\\"https://github.com/yunfeidog\\"}]}"]]},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"输入格式","slug":"输入格式","link":"#输入格式","children":[]},{"level":2,"title":"输出格式","slug":"输出格式","link":"#输出格式","children":[]},{"level":2,"title":"样例 #1","slug":"样例-1","link":"#样例-1","children":[{"level":3,"title":"样例输入 #1","slug":"样例输入-1","link":"#样例输入-1","children":[]},{"level":3,"title":"样例输出 #1","slug":"样例输出-1","link":"#样例输出-1","children":[]}]},{"level":2,"title":"思路()","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"题目描述","slug":"题目描述-1","link":"#题目描述-1","children":[]},{"level":2,"title":"输入格式","slug":"输入格式-1","link":"#输入格式-1","children":[]},{"level":2,"title":"输出格式","slug":"输出格式-1","link":"#输出格式-1","children":[]},{"level":2,"title":"样例 #1","slug":"样例-1-1","link":"#样例-1-1","children":[{"level":3,"title":"样例输入 #1","slug":"样例输入-1-1","link":"#样例输入-1-1","children":[]},{"level":3,"title":"样例输出 #1","slug":"样例输出-1-1","link":"#样例输出-1-1","children":[]}]},{"level":2,"title":"提示","slug":"提示","link":"#提示","children":[]},{"level":2,"title":"思路","slug":"思路-1","link":"#思路-1","children":[]},{"level":2,"title":"代码","slug":"代码-1","link":"#代码-1","children":[]},{"level":2,"title":"题目描述","slug":"题目描述-2","link":"#题目描述-2","children":[]},{"level":2,"title":"输入格式","slug":"输入格式-2","link":"#输入格式-2","children":[]},{"level":2,"title":"输出格式","slug":"输出格式-2","link":"#输出格式-2","children":[]},{"level":2,"title":"样例 #1","slug":"样例-1-2","link":"#样例-1-2","children":[{"level":3,"title":"样例输入 #1","slug":"样例输入-1-2","link":"#样例输入-1-2","children":[]},{"level":3,"title":"样例输出 #1","slug":"样例输出-1-2","link":"#样例输出-1-2","children":[]}]},{"level":2,"title":"思路","slug":"思路-2","link":"#思路-2","children":[]},{"level":2,"title":"代码","slug":"代码-2","link":"#代码-2","children":[]}],"git":{"createdTime":1698489661000,"updatedTime":1714290855000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":2}]},"readingTime":{"minutes":6.18,"words":1854},"filePathRelative":"algorithm/2-动态规划/区间DP.md","localizedDate":"2023年5月20日","excerpt":"<h1> 石子合并（弱化版）</h1>\\n<h2> 题目描述</h2>\\n<p><a href=\\"https://www.luogu.com.cn/problem/P1775\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.luogu.com.cn/problem/P1775</a></p>\\n<p>设有 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>N</mi><mo stretchy=\\"false\\">(</mo><mi>N</mi><mo>≤</mo><mn>300</mn><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">N(N \\\\le 300)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10903em;\\">N</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10903em;\\">N</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">≤</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord\\">300</span><span class=\\"mclose\\">)</span></span></span></span> 堆石子排成一排，其编号为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mn>1</mn><mo separator=\\"true\\">,</mo><mn>2</mn><mo separator=\\"true\\">,</mo><mn>3</mn><mo separator=\\"true\\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\\"true\\">,</mo><mi>N</mi></mrow><annotation encoding=\\"application/x-tex\\">1,2,3,\\\\cdots,N</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8778em;vertical-align:-0.1944em;\\"></span><span class=\\"mord\\">1</span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord\\">2</span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord\\">3</span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"minner\\">⋯</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10903em;\\">N</span></span></span></span>。每堆石子有一定的质量 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mo stretchy=\\"false\\">(</mo><msub><mi>m</mi><mi>i</mi></msub><mo>≤</mo><mn>1000</mn><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">m_i(m_i \\\\le 1000)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\">m</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3117em;\\"><span style=\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\">i</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span><span class=\\"mopen\\">(</span><span class=\\"mord\\"><span class=\\"mord mathnormal\\">m</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3117em;\\"><span style=\\"top:-2.55em;margin-left:0em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mathnormal mtight\\">i</span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">≤</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord\\">1000</span><span class=\\"mclose\\">)</span></span></span></span>。现在要将这 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\\"application/x-tex\\">N</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6833em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10903em;\\">N</span></span></span></span> 堆石子合并成为一堆。每次只能合并相邻的两堆，合并的代价为这两堆石子的质量之和，合并后与这两堆石子相邻的石子将和新堆相邻。合并时由于选择的顺序不同，合并的总代价也不相同。试找出一种合理的方法，使总的代价最小，并输出最小代价。</p>","copyright":{"author":"全民制作人cxk","license":"CC-BY-NC-SA-4.0"},"autoDesc":true}');export{s as data};
