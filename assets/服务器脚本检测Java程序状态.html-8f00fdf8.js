import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,a as e}from"./app-51564aae.js";const i={},l=e(`<h1 id="服务器脚本检测java程序状态" tabindex="-1"><a class="header-anchor" href="#服务器脚本检测java程序状态" aria-hidden="true">#</a> 服务器脚本检测Java程序状态</h1><blockquote><p>需求：测试服务器上面有些Java服务会由于某些经常挂掉，我们需要写一个脚本，来检测Java程序的运行状态，如果出现了挂掉的程序，那么肯定就要想办法让他重启。</p></blockquote><p>ps （英文全拼：process status）命令用于显示当前进程的状态，类似于 windows 的任务管理器。</p><p>查找指定进程格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> 进程关键字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举个例子<code>ps -ef |grep java</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root      <span class="token number">5479</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">3</span>月27 ?       00:36:04 <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xms256M</span> <span class="token parameter variable">-Xmx256m</span> jenkins.war <span class="token parameter variable">--httpPort</span><span class="token operator">=</span><span class="token number">8085</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>总共有八个列，解释如下：</p><ol><li><strong>User (用户)</strong>：进程的所有者，这里是&quot;root&quot;，意味着该Java进程是以root用户的身份运行的。</li><li><strong>PID (进程ID)</strong>：进程的唯一标识符，这里是5479。</li><li><strong>PPID (父进程ID)</strong>：创建该进程的父进程的ID，这里是1，通常1表示init进程，它是所有其他进程的祖先。</li><li><strong>C (CPU占用百分比)</strong>：进程在CPU上的占用百分比。由于这一列是0，意味着该进程目前没有占用CPU。</li><li><strong>STIME (启动时间)</strong>：进程启动的时间或者日期，这里是3月27日。</li><li><strong>TTY (终端设备)</strong>：与进程关联的终端设备，这里是一个问号，表示该进程没有与之关联的终端。</li><li><strong>TIME (CPU时间)</strong>：该进程已经在CPU上运行的累计时间。</li><li><strong>CMD (命令)</strong>：启动进程的命令，这里是完整的Java命令，包括了运行Jenkins的相关参数。</li></ol><p>所以，这一行的意思是：一个以root用户身份运行的Java进程，它的进程ID是5479，在3月27日启动，没有占用CPU，它是通过运行Jenkins的命令来启动的。</p><p>使用<code>pgrep -f 进程名</code>可以直接获取到进程的id，然后杀死重启。</p><h2 id="简单的重启java进程" tabindex="-1"><a class="header-anchor" href="#简单的重启java进程" aria-hidden="true">#</a> 简单的重启Java进程</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 定义Java进程名称</span>
<span class="token assign-left variable">JAVA_PROCESS_NAME</span><span class="token operator">=</span><span class="token string">&quot;driver-admin-service&quot;</span>

<span class="token comment"># 查找包含指定关键词的Java进程，并获取其进程ID</span>
<span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pgrep <span class="token parameter variable">-f</span> driver-admin-service<span class="token variable">)</span></span>
<span class="token builtin class-name">echo</span> <span class="token variable">$PID</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;未找到匹配的Java进程。&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;找到Java进程，<span class="token variable">$JAVA_PROCESS_NAME</span> 进程ID为: <span class="token variable">$PID</span>&quot;</span>

<span class="token comment"># 杀死Java进程</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;正在停止Java进程...&quot;</span>
<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Java进程已停止.&quot;</span>

<span class="token comment"># 启动新的Java进程</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;正在启动新的Java进程...&quot;</span>
<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Xms128M</span> <span class="token parameter variable">-Xmx128m</span> driver-admin-service-0.1.0.jar <span class="token parameter variable">--spring.profiles.active</span><span class="token operator">=</span>test <span class="token operator">&amp;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Java进程<span class="token variable">$JAVA_PROCESS_NAME</span> 已启动.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="检测java-待完成" tabindex="-1"><a class="header-anchor" href="#检测java-待完成" aria-hidden="true">#</a> 检测Java，待完成</h2>`,14),t=[l];function p(o,r){return s(),n("div",null,t)}const d=a(i,[["render",p],["__file","服务器脚本检测Java程序状态.html.vue"]]);export{d as default};
