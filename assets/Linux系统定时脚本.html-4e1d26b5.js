const n=JSON.parse('{"key":"v-2515a3c6","path":"/posts/%E6%9C%8D%E5%8A%A1%E5%99%A8/Linux%E7%B3%BB%E7%BB%9F%E5%AE%9A%E6%97%B6%E8%84%9A%E6%9C%AC.html","title":"Linux系统定时脚本","lang":"zh-CN","frontmatter":{"title":"Linux系统定时脚本","date":"2024-01-02T00:00:00.000Z","category":["服务器","Linux"],"tag":["服务器","Linux"],"description":"Linux系统定时脚本 定时清空nohup.out shell脚本clear_nohup.sh #!/bin/bash # 清空/opt/server/目录下每个子目录中的nohup.out文件 # 定义基础目录路径 base_dir=\\"/opt/server/\\" # 获取基础目录下的所有子目录列表 sub_dirs=($(find \\"$base_dir\\" -maxdepth 1 -mindepth 1 -type d)) # 遍历每个子目录 for dir in \\"${sub_dirs[@]}\\"; do # 构造当前子目录中nohup.out文件的路径 nohup_out=\\"$dir/nohup.out\\" # 检查当前子目录是否存在nohup.out文件 if [ -f \\"$nohup_out\\" ]; then echo \\"清空 $nohup_out\\" # 使用cat和/dev/null清空nohup.out文件的内容 cat /dev/null &gt; \\"$nohup_out\\" echo \\"$nohup_out 已清空\\" else echo \\"$dir 中未找到 nohup.out 文件\\" fi done","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/posts/%E6%9C%8D%E5%8A%A1%E5%99%A8/Linux%E7%B3%BB%E7%BB%9F%E5%AE%9A%E6%97%B6%E8%84%9A%E6%9C%AC.html"}],["meta",{"property":"og:site_name","content":"全民制作人ikun"}],["meta",{"property":"og:title","content":"Linux系统定时脚本"}],["meta",{"property":"og:description","content":"Linux系统定时脚本 定时清空nohup.out shell脚本clear_nohup.sh #!/bin/bash # 清空/opt/server/目录下每个子目录中的nohup.out文件 # 定义基础目录路径 base_dir=\\"/opt/server/\\" # 获取基础目录下的所有子目录列表 sub_dirs=($(find \\"$base_dir\\" -maxdepth 1 -mindepth 1 -type d)) # 遍历每个子目录 for dir in \\"${sub_dirs[@]}\\"; do # 构造当前子目录中nohup.out文件的路径 nohup_out=\\"$dir/nohup.out\\" # 检查当前子目录是否存在nohup.out文件 if [ -f \\"$nohup_out\\" ]; then echo \\"清空 $nohup_out\\" # 使用cat和/dev/null清空nohup.out文件的内容 cat /dev/null &gt; \\"$nohup_out\\" echo \\"$nohup_out 已清空\\" else echo \\"$dir 中未找到 nohup.out 文件\\" fi done"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T07:11:06.000Z"}],["meta",{"property":"article:author","content":"全民制作人ikun"}],["meta",{"property":"article:tag","content":"服务器"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-01-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T07:11:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux系统定时脚本\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-30T07:11:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"全民制作人ikun\\",\\"url\\":\\"https://github.com/yunfeidog\\"}]}"]]},"headers":[{"level":2,"title":"定时清空nohup.out","slug":"定时清空nohup-out","link":"#定时清空nohup-out","children":[]}],"git":{"createdTime":1717053066000,"updatedTime":1717053066000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":1}]},"readingTime":{"minutes":0.64,"words":193},"filePathRelative":"posts/服务器/Linux系统定时脚本.md","localizedDate":"2024年1月2日","excerpt":"<h1> Linux系统定时脚本</h1>\\n<h2> 定时清空nohup.out</h2>\\n<p>shell脚本<code>clear_nohup.sh</code></p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token shebang important\\">#!/bin/bash</span>\\n\\n<span class=\\"token comment\\"># 清空/opt/server/目录下每个子目录中的nohup.out文件</span>\\n\\n<span class=\\"token comment\\"># 定义基础目录路径</span>\\n<span class=\\"token assign-left variable\\">base_dir</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"/opt/server/\\"</span>\\n\\n<span class=\\"token comment\\"># 获取基础目录下的所有子目录列表</span>\\n<span class=\\"token assign-left variable\\">sub_dirs</span><span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\"><span class=\\"token variable\\">$(</span><span class=\\"token function\\">find</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$base_dir</span>\\"</span> <span class=\\"token parameter variable\\">-maxdepth</span> <span class=\\"token number\\">1</span> <span class=\\"token parameter variable\\">-mindepth</span> <span class=\\"token number\\">1</span> <span class=\\"token parameter variable\\">-type</span> d<span class=\\"token variable\\">)</span></span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># 遍历每个子目录</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token for-or-select variable\\">dir</span> <span class=\\"token keyword\\">in</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">${sub_dirs<span class=\\"token punctuation\\">[</span>@<span class=\\"token punctuation\\">]</span>}</span>\\"</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">do</span>\\n    <span class=\\"token comment\\"># 构造当前子目录中nohup.out文件的路径</span>\\n    <span class=\\"token assign-left variable\\">nohup_out</span><span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"<span class=\\"token variable\\">$dir</span>/nohup.out\\"</span>\\n\\n    <span class=\\"token comment\\"># 检查当前子目录是否存在nohup.out文件</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">[</span> <span class=\\"token parameter variable\\">-f</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$nohup_out</span>\\"</span> <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">then</span>\\n        <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"清空 <span class=\\"token variable\\">$nohup_out</span>\\"</span>\\n        \\n        <span class=\\"token comment\\"># 使用cat和/dev/null清空nohup.out文件的内容</span>\\n        <span class=\\"token function\\">cat</span> /dev/null <span class=\\"token operator\\">&gt;</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$nohup_out</span>\\"</span>\\n        \\n        <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$nohup_out</span> 已清空\\"</span>\\n    <span class=\\"token keyword\\">else</span>\\n        <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$dir</span> 中未找到 nohup.out 文件\\"</span>\\n    <span class=\\"token keyword\\">fi</span>\\n<span class=\\"token keyword\\">done</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"全民制作人cxk","license":"CC-BY-NC-SA-4.0"},"autoDesc":true}');export{n as data};
